{"227661230":{"url":"https://www.meetup.com/Papers-We-Love-London/events/227661230/","description":"<p><i>Remember to <a href=\"https://skillsmatter.com/meetups/7746-a-history-and-evaluation-of-system-r\">sign up on Skills Matter too</a>, so they know you're coming!</i></p> <p>The speaker:</p> <p>Tom Crayford is a database wrangler.</p> <p>The paper:</p> <p><a href=\"http://www.cs.berkeley.edu/~brewer/cs262/SystemR-comments.pdf\">An History and Evaluation of System R</a></p> <p>Chamberlin, Astrahan, Blagsen, Gray, King, Lindsay, Lorie, Mehl, Price, Putzolo, Selinger, Schkolnick, Slutz, Traiger, Wade, Yost</p> <p>Relational Database technology is one of the largest successes of computology over the past 46 years. Most useful non-blob data written to disk is probably in an RDBMS somewhere. But in 1970, all relational meant was \"somebody had written a weird paper\". System R was the research project that took that paper and made it of huge practical importance. On the way, the team discovered dozens of new research areas, techniques for database implementation, and ultimately made relational databases into the success they are today. Thousands of papers, and billions of dollars of investment are based off this one project, done by a team of 15 people. Many of the techniques invented are now taken for granted, just \"normal\" for line-of-business programmers.</p> <p>This is a survey, of a survey paper, of a large and long running research project. System R produced dozens of interesting papers, and we'll touch on the important topics, and reflect a bit on where we stand, 35 years after this paper was published.</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":0,"time":1453314600000,"title":"Tom Crayford on 'An History and Evaluation of System R'"},"245556437":{"url":"https://www.meetup.com/Papers-We-Love-London/events/245556437/","description":"<p>Gareth Morgan (<a href=\"https://twitter.com/axumgraphics\" class=\"linkified\">https://twitter.com/axumgraphics</a>) presents a talk about the paper \"Physically-Based Shading at Disney Animation\" (downloadable at <a href=\"https://disney-animation.s3.amazonaws.com/library/s2012_pbs_disney_brdf_notes_v2.pdf\" class=\"linkified\">https://disney-animation.s3.amazonaws.com/library/s2012_pbs_disney_brdf_notes_v2.pdf</a>) by Brent Burley at Walt Disney Animation Studios.</p> <p>Abstract</p> <p>Brent's paper is an overview of how Disney Animation Studios pioneered physically based shading. This talk will summarize the paper and serve as an introduction to the field of physically based shading and BRDF theory generally. If you are interested in learning more about physically based rendering and the science of computer animation join us for this technical discussion.</p> <p>The meetup</p> <p>PapersWeLove (<a href=\"http://paperswelove.org\" class=\"linkified\">http://paperswelove.org</a>) London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>The Speaker</p> <p>Gareth Morgan has been involved in games and 3D graphics since 1999, starting at Silicon Graphics, followed by several games companies; including Activision and BAM Studios. For many years he researched sophisticated rendering techniques using Imagination Technologies' ray tracing GPUs. He is currently CEO of Axum Graphics (<a href=\"http://axumgfx.com\" class=\"linkified\">http://axumgfx.com</a>), a ground breaking 3D content creation tool startup based in San Francisco. In 2014 and '15, he presented at GDC, and presented on rendering theory at Papers We Love London and San Francisco. His chapter on ray tracing was published in the book GPU Pro 6.</p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":0,"time":1513708200000,"title":"Gareth Morgan on \"Physically-Based Shading at Disney Animation\""},"266254549":{"url":"https://www.meetup.com/Papers-We-Love-London/events/266254549/","description":"<p>Corneliu Hoffman (<a href=\"https://github.com/corneliuhoffman\" class=\"linkified\">https://github.com/corneliuhoffman</a>) presents the paper:</p> <p>\"Rotation distance, triangulations and hyperbolic geometry\"</p> <p>by D.D. Sleator, R.E. Tarjan, W.P. Thurston (1988, downloadable from <a href=\"https://www.cs.cmu.edu/~sleator/papers/rotation-distance.pdf\" class=\"linkified\">https://www.cs.cmu.edu/~sleator/papers/rotation-distance.pdf</a>)</p> <p>Abstract</p> <p>This is a 30 years old paper with some lovely connections between really cool maths and computing. The talk is going to explain the Sleator-Tarjan-Thurston approach while also introducing some cool maths and perhaps some connections to physics. There would be no real proofs. This work has also been been made combinatorial here:<br/><a href=\"https://arxiv.org/pdf/1207.6296.pdf\" class=\"linkified\">https://arxiv.org/pdf/1207.6296.pdf</a></p> <p>The Speaker</p> <p>Corneliu (<a href=\"https://githubcom/corneliuhoffman\" class=\"linkified\">https://githubcom/corneliuhoffman</a>) is a mathematician and currently software developer at Droit. Until a few months ago he worked in academia teaching and doing research in Group Theory. Aside from Group Theory he is interested in logic, Theorem Proving and Type Theory especially as they relate to education.</p> <p>Location:</p> <p>Wellcome Trust<br/>Jenner Room<br/>215 Euston Road<br/>London NW1 2BE<br/><a href=\"https://goo.gl/maps/njW8Gp38P6q\" class=\"linkified\">https://goo.gl/maps/njW8Gp38P6q</a></p> <p>The nearest tube station is Euston/Euston Square. The schedule:</p> <p>• 6.30pm: pizza and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.525543212890625,"address1":"215 Euston Road","address2":null,"name":"Wellcome Trust","postalCode":null,"lon":-0.1349560022354126,"country":"gb","city":"London"},"utcOffset":0,"time":1574274600000,"title":"Rotation distance, triangulations and hyperbolic geometry"},"262093449":{"url":"https://www.meetup.com/Papers-We-Love-London/events/262093449/","description":"<p>Tom Mulvaney presents \"Opportunistic Data Structures with Applications\" based on the paper with the same title by P. Ferragina and G. Manzini (<a href=\"https://people.unipmn.it/manzini/papers/focs00draft.pdf\" class=\"linkified\">https://people.unipmn.it/manzini/papers/focs00draft.pdf</a>).</p> <p>Abstract</p> <p>The paper describes techniques which have been employed heavily in the domain of bioinformatics but are also relevant to those interested in searching or compressing strings. I will be presenting a simplified version of the method outlined in the paper as well as illustrating why it has found such great use in the field of bioinformatics.</p> <p>The Speaker</p> <p>I’m Tom Mulvaney, a software engineer at BUGS Bioscience developing software for studying disease causing bacteria. When I’m not pressing keys, I like to explore the world by bike.</p> <p>Location:</p> <p>Microsoft Reactor London<br/>70 Wilson Street<br/><a href=\"https://goo.gl/maps/JjGrPNB8a9N2\" class=\"linkified\">https://goo.gl/maps/JjGrPNB8a9N2</a></p> <p>The nearest tube station is Moorgate, Old Street, Liverpool St. With the schedule:</p> <p>• 6.30pm: food and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.52177429199219,"address1":"70 Wilson Street","address2":null,"name":"The Microsoft Reactor London","postalCode":null,"lon":-0.08459799736738205,"country":"gb","city":"London"},"utcOffset":3600000,"time":1560792600000,"title":"Tom Mulvaney - \"Opportunistic Data Structures with Applications\""},"221535320":{"url":"https://www.meetup.com/Papers-We-Love-London/events/221535320/","description":"<p>Andy Bennett on \"Scalable Atomic Visibility with RAMP Transactions\"</p> <p> </p> <p>Bailis et al formalise \"Read Atomic\" isolation which is a database isolation level sufficient for many applications which make use of large,distributed databases in real world applications. They then show how to design a database system which provides this isolation level whilst allowing read, write and read/write transactions on data across multiple partitions: partitions which do not need to communicate with each other.This method is both performant and fairly portable to existing architectures and allows database authors to implement much stronger guarantees than are currently available from systems in use at companies such as Facebook, LinkedIn, Yahoo or Amazon.</p> <p> </p> <p>In this talk we will explore the contributions of this paper and how they can be used solve some of the anomolies encountered in today's multi-node, distributed, database systems and accompanying applications.</p> <p> </p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":3600000,"time":1429120800000,"title":"Andy Bennett on \"Scalable Atomic Visibility with RAMP Transactions\""},"258060947":{"url":"https://www.meetup.com/Papers-We-Love-London/events/258060947/","description":"<p>Dimos Raptis (<a href=\"https://twitter.com/dimosr7\" class=\"linkified\">https://twitter.com/dimosr7</a>) presents the original \"Bitcoin: A Peer-to-Peer Electronic Cash System\" paper by Satoshi Nakamoto.</p> <p>Download the paper here: <a href=\"https://bitcoin.org/bitcoin.pdf\" class=\"linkified\">https://bitcoin.org/bitcoin.pdf</a></p> <p>Abstract</p> <p>It's been now 10 years since the genesis of Bitcoin, which has given birth to many more protocols and technologies, while also helping establish blockchain as a technological concept. In this talk, we'll celebrate its birthday, by going through the initial paper by Satoshi Nakamoto. We will explain the main principles behind the idea, explain the basic design decisions and implementation details and how it deals with several problems. We will conclude the session by looking back at history and retrospecting on the implications of some of these design decisions.</p> <p>The Speaker</p> <p>Dimos has an MEng in Eletrical and Computer Engineering from the National Technical University of Athens and an MSc in Software Engineering from Imperial College London. Currently, he's working as a Software Engineer in London. His main areas of passion are distributed systems, clean &amp; elegant software and testing, but this list keeps growing alarmingly. You can tweet him at: <a href=\"https://twitter.com/dimosr7\" class=\"linkified\">https://twitter.com/dimosr7</a></p> <p>Logistic</p> <p>We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/2/9/3/5/600_478210549.jpeg","height":null,"width":null}],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":0,"time":1548354600000,"title":"Dimos Raptis on the original Bitcoin paper by Satoshi Nakamoto"},"223602194":{"url":"https://www.meetup.com/Papers-We-Love-London/events/223602194/","description":"<p>Hagit Attiya and Jennifer L Welch: “Sequential Consistency versus Linearizability,” ACM Transactions on Computer Systems (TOCS), volume 12, number 2, pages 91–122, May 1994.</p> <p><a href=\"http://courses.csail.mit.edu/6.852/01/papers/p91-attiya.pdf\"><a href=\"http://courses.csail.mit.edu/6.852/01/papers/p91-attiya.pdf\" class=\"linkified\">http://courses.csail.mit.edu/6.852/01/papers/p91-attiya.pdf</a></a><br/><a href=\"http://dx.doi.org/10.1145/176575.176576\"><a href=\"http://dx.doi.org/10.1145/176575.176576\" class=\"linkified\">http://dx.doi.org/10.1145/176575.176576</a></a></p> <p>An often-cited constraint on distributed database design is the CAP theorem, an impossibility result in distributed systems. It states that in a linearizable database, if the network is interrupted, some nodes cannot respond to requests. Although being able to tolerate network faults is important, the performance and response times of a database are often even more important, and CAP says nothing about those. It's also a pretty boring theorem.</p> <p>Attiya and Welch's paper, which we'll discuss in this session, is vastly more interesting. It also proves an impossibility result, but it's about response times: on a network where the uncertainty of packet delay is u, there is no algorithm that implements linearizability with read requests faster than u/4 and write requests faster than u/2. On a network where packet delay is highly variable (like many computer networks), a linearizable database is therefore inevitably going to be slow.</p> <p>The paper then goes on to compare linearizability to sequential consistency (a weaker consistency guarantee), and shows that sequential consistency can be significantly faster.</p> <p>This is a theoretical paper, but its applications to practical systems are very real. Its proofs are elegant and not too difficult to follow. It was almost a decade ahead of the CAP theorem. And moreover, it has no male co-authors. What's not to love about it?</p> <p>The presenter:</p> <p>Martin Kleppmann is author of the O'Reilly book Designing Data-Intensive Applications (<a href=\"http://dataintensive.net/\"><a href=\"http://dataintensive.net\" class=\"linkified\">http://dataintensive.net</a></a>), which analyses the data infrastructure and architecture used by internet companies. He previously co-founded a startup, Rapportive, that was acquired by LinkedIn in 2012. His technical blog is at <a href=\"http://martin.kleppmann.com/\"><a href=\"http://martin.kleppmann.com\" class=\"linkified\">http://martin.kleppmann.com</a></a> and he's <a href=\"https://twitter.com/martinkl\">@martinkl</a> on Twitter.</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/c/5/f/6/600_439550678.jpeg","height":null,"width":null}],"venue":{"lat":51.53070831298828,"address1":"338-346 Goswell Road","address2":"EC1V 7LQ","name":"GoCardless","postalCode":null,"lon":-0.10384400188922882,"country":"gb","city":"London"},"utcOffset":3600000,"time":1436378400000,"title":"Martin Kleppmann on “Sequential Consistency versus Linearizability”"},"254447847":{"url":"https://www.meetup.com/Papers-We-Love-London/events/254447847/","description":"<p>Marija Katic (<a href=\"https://twitter.com/marija_katich\" class=\"linkified\">https://twitter.com/marija_katich</a> <a href=\"https://uk.linkedin.com/in/marijakatic\" class=\"linkified\">https://uk.linkedin.com/in/marijakatic</a>) presents the paper \"A Differencing Algorithm for Object-Oriented Programs\" by Apiwattanapong, Orso and Harrold.</p> <p>You can download the paper at <a href=\"https://www.cc.gatech.edu/~orso/papers/term.orso.harrold.ASE04.pdf\" class=\"linkified\">https://www.cc.gatech.edu/~orso/papers/term.orso.harrold.ASE04.pdf</a></p> <p>Abstract</p> <p>In order to identify the changed program entities between two versions of a program (original and modified) and to classify them as added, deleted, or modified, differencing algorithms are used. Differencing algorithms are the core part of many software engineering tasks. For example, change impact analysis is used to identify the program parts that are affected by changes. For this purpose, the impact analysis uses the information about the location of program changes. Another example includes the program-profile estimation. In this task, for the original and modified program version, the coverage or profile information for the modified program version is estimated based on the coverage or profile information from the original program version and the results of the differencing algorithm. The estimated coverage or profile information can be useful when, for example, it is desirable to eliminate the cost of rerunning the test suite on the modified program version in order to obtain this information.<br/>In this talk, we will discuss a control-flow graph representation of the object-oriented program and a differencing algorithm that works on the control-flow graph representation. We will discuss how this algorithm can identify changes in program behaviour (specific to object-oriented programs) that are caused by syntactic changes. In addition, we will present different heuristics that the algorithm uses in order to increase the precision of the results.</p> <p>The Speaker</p> <p>Marija Katic has MEd in Mathematics and Informatics from the University of Split and a PhD in Computer Science from the University of Zagreb. She has worked as a Lecturer, Researcher and Software Developer. Currently, she works as a Systems Analyst and Developer at Birkbeck, University of London.</p> <p>Logistic</p> <p>This meet up is at WeWork Shoreditch ( <a href=\"https://www.wework.com/buildings/shoreditch-mark-square--london\" class=\"linkified\">https://www.wework.com/buildings/shoreditch-mark-square--london</a> ). Map: <a href=\"https://goo.gl/maps/1XpFzQLY1ev\" class=\"linkified\">https://goo.gl/maps/1XpFzQLY1ev</a> . The nearest tube station is Old Street. The schedule:</p> <p>• 6.30pm: pizza and drinks (Kindly sponsored by AI <a href=\"https://www.imandra.ai\" class=\"linkified\">https://www.imandra.ai</a> )<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.524478912353516,"address1":"1 Mark Square ","address2":null,"name":"WeWork 1 Mark Sq","postalCode":null,"lon":-0.08227399736642838,"country":"GB","city":"London"},"utcOffset":3600000,"time":1537378200000,"title":"Marija Katic presents \"A Differencing Algorithm for Object-Oriented Programs\""},"265469441":{"url":"https://www.meetup.com/Papers-We-Love-London/events/265469441/","description":"<p>Papers We Love London October Meetup hosts Andrew Lelechenko presenting the functional pearl: \"Backtracking, Interleaving, and Terminating Monad Transformers\" by Kiselyov, Shan, Friedman and Sabry. The paper describes a library for adding backtracking computations to any Haskell monad, with features inspired by logic programming.</p> <p>Please read the paper here: <a href=\"http://okmij.org/ftp/papers/LogicT.pdf\" class=\"linkified\">http://okmij.org/ftp/papers/LogicT.pdf</a></p> <p>Who?</p> <p>Andrew (<a href=\"https://github.com/Bodigrim\" class=\"linkified\">https://github.com/Bodigrim</a>) is a software developer from London with a strong background in mathematics and computer science. After receiving his PhD degree, he went into industry and ended up developing a compiler of the domain-specific language for finance and trading, implemented in Haskell. His main open-source contributions are mathematical libraries with a focus on performance.</p> <p>Where?</p> <p>The Office Group - Albert House<br/>[masked] Old Street<br/>EC1V 9DD<br/><a href=\"https://goo.gl/maps/m6qMVAEQo4P2\" class=\"linkified\">https://goo.gl/maps/m6qMVAEQo4P2</a><br/>The nearest tube station is Old Street.</p> <p>What?</p> <p>• 6.30pm: snacks and drinks (kindly sponsored by Droit <a href=\"https://droit.tech\" class=\"linkified\">https://droit.tech</a>)<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/5/e/c/1/600_486204257.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/5/e/c/3/600_486204259.jpeg","height":null,"width":null}],"venue":{"lat":51.52592849731445,"address1":"256-260 Old Street","address2":null,"name":"The Office Group - Albert House","postalCode":null,"lon":-0.08506599813699722,"country":"gb","city":"London"},"utcOffset":0,"time":1572373800000,"title":"Andrew Lelechenko \"Backtracking Interleaving and Terminating Monad Transformers\""},"242355199":{"url":"https://www.meetup.com/Papers-We-Love-London/events/242355199/","description":"<p>When a paper gets really large it transforms into a book! <a href=\"http://fsharpworks.com\">Tomas Petricek</a> (<a href=\"https://twitter.com/tomaspetricek?lang=en\">@tomaspetricek</a>) is presenting \"<b><a href=\"https://en.m.wikipedia.org/wiki/Where_Mathematics_Comes_From\">Where Mathematics Comes From</a></b>\" by G. Lakoff and R. E. Núñez. A paper related to this book is \"Lakoff, Nunez [1997] The Metaphorical Structure of Mathematics\" available at <a href=\"http://escholarship.org/uc/item/5qq7q51z\">this link</a>.</p> <p>• 6.30pm: networking, pizza and drinks.</p> <p>• 7:00pm: presentation starts</p> <p><b>Abstract</b></p> <p><i>This book by cognitive linguist George Lakoff and a psychologist Rafael Nunez seeks to found a cognitive science of mathematics. The key idea is that mathematics is born from our interactions with the world (it is embodied) through cognitive metaphors (that construct more complex mathematical structures as metaphors of simpler ones). The book uses the framework to explain a number of mathematical constructs including arithmetic, theory of sets and continuous functions.</i></p> <p><i>In this talk, I will give an overview of the key ideas from the book and their consequences for computer science. For example, could cognitive science of mathematics and cognitive metaphors explain theoretical computer science objects such as the lambda calculus?</i></p> <p><i>As this is a talk about a book rather than a paper, we do not expect everyone to read the book before the meetup, but you are more then welcome to get a copy and get started. You can see the talk more as a teaser for the book!</i></p> <p><b>The Speaker</b></p> <p><i>Tomas is a computer scientist and open-source developer. He is a Visiting Researcher at the Alan Turing Institute working on tools for open data-driven storytelling. He wrote a popular book called \"Real-World Functional Programming\" and is a lead developer of several F# open-source libraries. He is a partner at fsharpWorks (<a href=\"http://fsharpworks.com/\"><a href=\"http://fsharpworks.com\" class=\"linkified\">http://fsharpworks.com</a></a>) where he provides trainings and consulting services. Tomas recently submitted his PhD thesis at the University of Cambridge focused on context-aware programming, but his most recent writings also includes two essays try to understand programming through the perspective of philosophy of science.</i></p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/c/3/9/3/600_463790067.jpeg","height":null,"width":null}],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1502991000000,"title":"Tomas Petricek with \"Where Mathematics Comes From\" by G. Lakoff and R. Nunez"},"220542230":{"url":"https://www.meetup.com/Papers-We-Love-London/events/220542230/","description":"<p>Relational programming, or logic programming, is a programming paradigm that exhibits remarkable and powerful properties, to the extent that its implementation seems frightfully daunting to the layman. µKanren is a minimal relational language that seeks to strip the paradigm down to its core, leaving us with a succinct, elegant and above all <i>simple</i> set of primitives on top of which we can rebuild even the most powerful relational constructs.</p> <p>In this talk, we will explore the µKanren language by implementing it from first principles in a simple functional programming language, going on to demonstrate how you can assemble these simple building blocks into a semblance of its richer parent, miniKanren, and maybe solve a logic puzzle or two to make sure it’s working as advertised.</p> <p>The µKanren paper, and the original µKanren implementation, were authored by Jason Hemann and Daniel P. Friedman. The paper is available at <a href=\"http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf\"><a href=\"http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf\" class=\"linkified\">http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf</a></a>, and the Scheme implementation at <a href=\"https://github.com/jasonhemann/microKanren\"><a href=\"https://github.com/jasonhemann/microKanren\" class=\"linkified\">https://github.com/jasonhemann/microKanren</a></a>.</p> <p>About Bodil:<br/>A compulsive conference speaker in the fields of functional programming and internets technologies, and a co-organiser of multiple developer conferences in Scandinavia and the UK, mostly because she’s still learning how to stop.</p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":0,"time":1424286000000,"title":"Bodil Stokke on µKanren: A Minimal Functional Core for Relational Programming"},"252626633":{"url":"https://www.meetup.com/Papers-We-Love-London/events/252626633/","description":"<p>Tom Harding (<a href=\"http://www.tomharding.me\" class=\"linkified\">http://www.tomharding.me</a> , <a href=\"https://twitter.com/am_i_tom\" class=\"linkified\">https://twitter.com/am_i_tom</a>) presents a talk on \" Comonads all the way down\" inspired by the paper \"Declarative UIs are the Future — And the Future is Comonadic!\" by Phil Freeman.</p> <p>Download the paper at:<br/>* <a href=\"https://functorial.com/the-future-is-comonadic/main.pdf\" class=\"linkified\">https://functorial.com/the-future-is-comonadic/main.pdf</a></p> <p>Abstract</p> <p>Anyone who has been involved with front-end development over the last<br/>few years will have seen drastic changes in the way we approach UIs.<br/>As we move from jQuery to React, the trend has been clear: we want our<br/>UIs to be declarative functions from our state to our HTML. So...<br/>what's next?</p> <p>Phil's conference paper introduces comonads as the abstraction to<br/>represent the properties we want in our UIs, and explores the powerful<br/>ways in which they compose. In this talk, we'll follow along with the<br/>beloved language of JavaScript, and see how we can use these examples<br/>in our work today.</p> <p>The Speaker</p> <p>Tom is a lead engineer at Habito, the digital mortgage broker built<br/>entirely in Haskell and PureScript. He works on a project derived from<br/>this paper, purescript-panda: a UI library built around the idea of<br/>incremental rendering.</p> <p>Logistic</p> <p>We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/6/6/d/600_473161645.jpeg","height":null,"width":null}],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1531935000000,"title":"Comonads all the way down (by Tom Harding)"},"260109556":{"url":"https://www.meetup.com/Papers-We-Love-London/events/260109556/","description":"<p>Martin Monperrus presents: \"Creating an Artificial Software Developer\" based on his ongoing research in the field at the KTH Royal Institute of Technology (<a href=\"https://www.monperrus.net/martin/publications\" class=\"linkified\">https://www.monperrus.net/martin/publications</a>).</p> <p>Preparatory reading</p> <p><a href=\"https://medium.com/@martin.monperrus/human-competitive-patches-in-automatic-program-repair-with-repairnator-359042e00f6a\" class=\"linkified\">https://medium.com/@martin.monperrus/human-competitive-patches-in-automatic-program-repair-with-repairnator-359042e00f6a</a><br/><a href=\"https://github.com/Spirals-Team/repairnator/\" class=\"linkified\">https://github.com/Spirals-Team/repairnator/</a></p> <p>Abstract</p> <p>This talk describes research in AI assisted software development, and the vision of bots who help software engineers with for all sorts of tasks. In particular, they are doing automated bug fixing. It's a talk based on recent software engineering research, with a pinch of AI, and also some wider speculations about bots. The talk is based on a series of papers from different research groups.</p> <p>The Speaker</p> <p>Martin Monperrus is Professor of Software Technology at KTH Royal Institute of Technology, Sweden. His current research contributes to answering to two fundamental questions: How to automatically repair software? How to automatically harden software? Martin's research is founded on open-science and open-innovation.</p> <p>Location:</p> <p>Microsoft Reactor London<br/>70 Wilson Street<br/><a href=\"https://goo.gl/maps/JjGrPNB8a9N2\" class=\"linkified\">https://goo.gl/maps/JjGrPNB8a9N2</a></p> <p>The nearest tube station is Moorgate, Old Street, Liverpool St. With the schedule:</p> <p>• 6.30pm: pizza and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.52177429199219,"address1":"70 Wilson Street","address2":null,"name":"The Microsoft Reactor London","postalCode":null,"lon":-0.08459799736738205,"country":"gb","city":"London"},"utcOffset":3600000,"time":1555522200000,"title":"Martin Monperrus presents \"Creating an Artificial Software Developer\""},"262410270":{"url":"https://www.meetup.com/Papers-We-Love-London/events/262410270/","description":"<p>In collaboration with Curry On 2019 (www.curry-on.org), PWL London is organising a special afternoon of love for our favourite papers! Six speakers, six papers, six meetups in one and the unique opportunity to chat with attendees and speakers before the conference.</p> <p>-Schedule-</p> <p>* 13:50-14:00 PWL London - CurryOn introduction</p> <p>* 14:00-14:30 Heather Miller (<a href=\"https://heather.miller.am\" class=\"linkified\">https://heather.miller.am</a>) - \"A retrospective on distributed programming languages\"</p> <p>* 14:30-15:00 Derek Jones (<a href=\"http://www.knosof.co.uk\" class=\"linkified\">http://www.knosof.co.uk</a>) - \"The available experimental evidence for the benefits of strong typing\" (<a href=\"https://shape-of-code.coding-guidelines.com/2014/08/27/evidence-for-the-benefits-of-strong-typing-where-is-it/\" class=\"linkified\">https://shape-of-code.coding-guidelines.com/2014/08/27/evidence-for-the-benefits-of-strong-typing-where-is-it/</a>)</p> <p>BREAK</p> <p>* 15:30-16:00 Nate Foster (<a href=\"http://www.cs.cornell.edu/~jnfoster\" class=\"linkified\">http://www.cs.cornell.edu/~jnfoster</a>) - \"Hyperproperties\" (<a href=\"https://dl.acm.org/citation.cfm?id=1891830\" class=\"linkified\">https://dl.acm.org/citation.cfm?id=1891830</a>)</p> <p>* 16:00-16:30 Vilem Liepelt (<a href=\"https://www.cs.kent.ac.uk/people/rpg/vl200/\" class=\"linkified\">https://www.cs.kent.ac.uk/people/rpg/vl200/</a>) - \"Quantitative program reasoning with graded modal types\" (<a href=\"https://www.cs.kent.ac.uk/people/staff/dao7/publ/granule-icfp19.pdf\" class=\"linkified\">https://www.cs.kent.ac.uk/people/staff/dao7/publ/granule-icfp19.pdf</a>)</p> <p>BREAK</p> <p>* 17:00-17:30 Jan Vitek (<a href=\"http://janvitek.org\" class=\"linkified\">http://janvitek.org</a>) - \"A large-scale study of programming languages and code quality in GitHub\" (<a href=\"https://doi.org/10.1145/3126905\" class=\"linkified\">https://doi.org/10.1145/3126905</a> <a href=\"https://arxiv.org/abs/1901.10220\" class=\"linkified\">https://arxiv.org/abs/1901.10220</a>)</p> <p>* 17:30-18:00 Jaseem Abid (<a href=\"https://blog.jabid.in\" class=\"linkified\">https://blog.jabid.in</a>) - \"An Incremental Approach to Compiler Construction\" (<a href=\"http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf\" class=\"linkified\">http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf</a>)</p> <p>Drinks and snacks provided. Feel free to stay longer for a friendly pint afterwards (7pm Craft Beers Co., 233 Old St, London, EC1V 9HE). For any info, please get in touch: paperswelove.london[at]gmail.com</p> <p>Location:</p> <p>Microsoft Reactor London<br/>70 Wilson Street<br/>EC2A 2DB<br/><a href=\"https://goo.gl/maps/JjGrPNB8a9N2\" class=\"linkified\">https://goo.gl/maps/JjGrPNB8a9N2</a></p> <p>The nearest tube station is Moorgate, Old Street, Liverpool St.</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/c/8/0/5/600_483111205.jpeg","height":null,"width":null}],"venue":{"lat":51.52177429199219,"address1":"70 Wilson Street","address2":null,"name":"The Microsoft Reactor London","postalCode":null,"lon":-0.08459799736738205,"country":"gb","city":"London"},"utcOffset":3600000,"time":1563107400000,"title":"CurryOn/PWL Special Event"},"230301525":{"url":"https://www.meetup.com/Papers-We-Love-London/events/230301525/","description":"<p>We have EuroSys in town so a few peeps attending that are doing a CRDT themed social meet in <a href=\"http://www.taylor-walker.co.uk/pub/hoop-and-toy-kensington/c3067/\">Hoop and Toy</a> near South Kensington.</p> <p>\"Are you curious about CRDT research? Are you looking into this and related technologyto tackle scalability and latency reduction in a new system? </p> <p>If you are interested on an informal exchange of ideas about current trends on research and industry uses of Conflict-Free Replicated Data-Types (CRDTs), we are organizing a Get-together in central London on April 19th, starting around 17h00. Several of the initial researchers and early developers will attend, and will be open for chatting on new ideas or just help explain why a semi-lattice is cool. </p> ","photos":[],"venue":{"lat":51.49484634399414,"address1":"34 Thurloe Place","address2":"South Kensington","name":"Hoop and Toy","postalCode":null,"lon":-0.17426900565624237,"country":"gb","city":"London"},"utcOffset":3600000,"time":1461081600000,"title":"Conflict Free Synchronization Get-together"},"225291417":{"url":"https://www.meetup.com/Papers-We-Love-London/events/225291417/","description":"<p>The paper, by Melissa O’Neill, is available <a href=\"https://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf\">here</a>.</p> <p>I like it because I first read it not knowing Haskell very well and I read through the paper a few times and had a wonderful <i>a-ha</i> moment with a sentence or two that made the idea click and  was able to implement it in Python. I have since re-done it in Clojure so you will see it done 3 ways (and hopeful I will share an <i>a-ha</i> moment with you)</p> <p>\"\"\"A much beloved and widely used example showing the elegance and simplicity of lazy functional programming represents itself as \"The Sieve of Eratosthenes.\" The paper shows that this example is not the sieve and presents an implementation that actually is.\"\"\"</p> <p>Starting with the classic one-liner sieve </p> <p>sieve (p : xs) = p : sieve [x | x &lt;− xs, x ‘mod‘ p &gt; 0]</p> <p>primes = sieve [2..] </p> <p>O'Neill proceeds to show why this standard rendition of the Sieve of Eratosthenes does not in fact \"cross-off\" the multiples of each prime in the same way the \"real\" Sieve does.</p> <p>She notes that <i>\"Some readers may feel that despite all of these concerns, the earlier algorithm is somehow <b>morally</b> the Sieve of Eratosthenes. I would argue, however, that they are confusing a mathematical abstraction drawn from the Sieve of Eratosthenes with the actual algorithm. The algorithmic details, such as how you remove all the multiples of 17, matter.\"</i></p> <p>As this is at Skills Matter please also <a href=\"https://skillsmatter.com/meetups/7328-papers-we-love-september-meet-up\">sign up there</a> </p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":3600000,"time":1442424600000,"title":"Tom Hall on 'The Genuine Sieve of Eratosthenes'"},"232484664":{"url":"https://www.meetup.com/Papers-We-Love-London/events/232484664/","description":"<p>As always, please <a href=\"https://skillsmatter.com/meetups/8284-papers-we-love-meetup\">sign up</a> at Skills Matter and thanks to them for hosting us!</p> <p><b>Tom Hall on Plank's \"A Tutorial on Reed-Solomon Coding for<br/>Fault-Tolerance in RAID-like Systems\"<br/></b></p> <p>In what will be my last Papers We Love before taking a long overdue sabbatical and leaving the UK for a while I want to explain how RAID works, why we need it and why existing strategies may become less useful at protecting us from data loss.</p> <p>The paper [1] is for systems programmers, is quite accessible (modulo an error corrected in a follow-up 7 years later [2]) and explains a strategy to survive any number of disk failures by maintaining checksums using Galois Fields (which it also explains)</p> <p>You may find it useful to also look at 'The mathematics of RAID-6' [3] explaining what the linux kernels RAID6 implementation does.</p> <p>[1]: <a href=\"http://web.eecs.utk.edu/~plank/plank/papers/SPE-9-97.html\"><a href=\"http://web.eecs.utk.edu/~plank/plank/papers/SPE-9-97.html\" class=\"linkified\">http://web.eecs.utk.edu/~plank/plank/papers/SPE-9-97.html</a></a></p> <p>[2]: <a href=\"http://web.eecs.utk.edu/~plank/plank/papers/CS[masked].html\"><a href=\"http://web.eecs.utk.edu/~plank/plank/papers/CS[masked].html\" class=\"linkified\">http://web.eecs.utk.edu/~plank/plank/papers/CS[masked].html</a></a></p> <p>[3]: <a href=\"https://www.kernel.org/pub/linux/kernel/people/hpa/raid6.pdf\"><a href=\"https://www.kernel.org/pub/linux/kernel/people/hpa/raid6.pdf\" class=\"linkified\">https://www.kernel.org/pub/linux/kernel/people/hpa/raid6.pdf</a></a></p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":3600000,"time":1469640600000,"title":"Tom Hall on Plank's \"A Tutorial on Reed-Solomon Coding for Fault-Tolerance...\""},"251398147":{"url":"https://www.meetup.com/Papers-We-Love-London/events/251398147/","description":"<p>Bruno Bonacci (<a href=\"https://twitter.com/BrunoBonacci\" class=\"linkified\">https://twitter.com/BrunoBonacci</a> <a href=\"http://blog.brunobonacci.com\" class=\"linkified\">http://blog.brunobonacci.com</a>) presents a talk on \"Viewstamped Replication\" on the papers \"Viewstamped Replication\" by Brian M. Oki<br/>Barbara Liskov and \"Viewstamped Replication Revisited\" by Barbara Liskov and James Cowling.</p> <p>Download the papers at:<br/>* <a href=\"http://pmg.csail.mit.edu/papers/vr.pdf\" class=\"linkified\">http://pmg.csail.mit.edu/papers/vr.pdf</a><br/>* <a href=\"http://pmg.csail.mit.edu/papers/vr-revisited.pdf\" class=\"linkified\">http://pmg.csail.mit.edu/papers/vr-revisited.pdf</a></p> <p>Abstract</p> <p>Viewstamped Replication is a protocol to replicate state and converge to a consistent view in face of non Byzantine failures. The original paper was published in 1988 and then revisited in 2012.<br/>It is regarded as one of the first papers on distributed consensus; as comparison Lamport's Paxos paper (\"The part-time parliament\" <a href=\"https://dl.acm.org/citation.cfm?id=279229\" class=\"linkified\">https://dl.acm.org/citation.cfm?id=279229</a>) was published ten years later.<br/>The original paper is harder to read as the terminology used is for distributed systems evolved over the years. The 2012 paper is much simpler to read and it touches on a number of possible optimisations over the protocol. In this talk we will be taking a look to the 2012 paper and how the protocol works and touching on the original paper as well.</p> <p>The Speaker</p> <p>Bruno Bonacci is a Software Architect and distributed system engineer with over 25 years of experience. He worked on many high-volume transactional systems, he built Petabyte-scale data-lakes, he's passionate about functional programming and data analysis in Clojure.</p> <p>Logistic</p> <p>We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1528997400000,"title":"Bruno Bonacci on Viewstamped Replication"},"241268026":{"url":"https://www.meetup.com/Papers-We-Love-London/events/241268026/","description":"<p>Chris Ford (@ctford) is presenting the paper \"<b>Analysis by Compression</b>\" by David Meredith. <a href=\"http://www.titanmusic.com/papers/public/MeredithMEC2013ProceedingsPaper.pdf\">Please have a look at the paper here before the meeting</a>.</p> <p>• 6.30pm: pizza and drinks</p> <p>• 7:00pm: presentation starts</p> <p><b>Abstract</b></p> <p><i>In his paper 'Analysis by Compression', David Meredith wonders how are we supposed to decide which is “better”</i><i> if we are given two analyses of the same musical work.</i> His fascinating answer is to turn to complexity theory. Kolmogorov complexity analysis suggests that we can measure how well we understand a piece of music by the concision of a program that produces it. We can then compare programmatic 'explanations' of the same piece of music via their length.<i>Meredith also sketches a way to apply his insight to psychological coding theory of perceptual organisation. If you accept his argument, it shows that complexity theory is not something we impose upon music, but is fundamental to the act of musical appreciation.</i></p> <p><b>The Speaker</b></p> <p><i>Chris is a certified BABE (Bachelor of Arts, Bachelor of Engineering), and consequentially an idiophile and technophobe. He regards computers with fascination in theory and suspicion in practice. Chris began to make music with code to compensate for his poor piano technique. It was only later that he realised that programming offers deep insight into musical structure and theory. When he works, he works for ThoughtWorks, though that isn’t all the time.</i></p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/7/f/5/4/600_462812596.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/7/f/6/1/600_462812609.jpeg","height":null,"width":null}],"venue":{"lat":51.50333023071289,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07512100040912628,"country":"gb","city":"London"},"utcOffset":3600000,"time":1499967000000,"title":"Chris Ford with \"Analysis by Compression\" by David Meredith"},"270121315":{"url":"https://www.meetup.com/Papers-We-Love-London/events/270121315/","description":"<p>Tommy Hall (<a href=\"https://twitter.com/thattommyhall\" class=\"linkified\">https://twitter.com/thattommyhall</a>) presents the paper:</p> <p>\"Erasure Code with Shingled Local Parity Groups for Efficient Recovery from Multiple Disk Failures\" by Takeshi Miyamae, Takanori Nakao, and Kensuke Shiozawa, Fujitsu Laboratories Ltd. The paper can be downloaded here (<a href=\"https://www.usenix.org/node/187155\" class=\"linkified\">https://www.usenix.org/node/187155</a>).</p> <p>Schedule</p> <p>(See the Zoom info below)</p> <p>[masked]pm Grab a drink and enter the Zoom room for a friendly chat!<br/>[masked]pm Presentation<br/>[masked]pm Q&amp;A</p> <p>Abstract</p> <p>Previously at PwL, I have given a talk (<a href=\"https://www.meetup.com/Papers-We-Love-London/events/232484664\" class=\"linkified\">https://www.meetup.com/Papers-We-Love-London/events/232484664</a>) on RAID systems and their clever use of some interesting mathematics to recover from data loss while using space more efficiently than a simplistic 'replicate the data N times' approach.</p> <p>While the approach taken with RAID6 (so-called Reed-Soloman encodings) to protect from 2 failures can be generalised, moving to higher redundancy requires more work to be be done and is difficult to implement efficiently.</p> <p>There is lots of work on Erasure Codes but I have chosen to focus on this paper by Miyamae, Nakao, Shiozawa from Fujitsu as it solves the problem in a neat way that allows you to tune the trade off between space efficiency, durability and recovery efficiency and has a production-ready implementation in Ceph</p> <p><a href=\"http://docs.ceph.com/docs/jewel/rados/operations/erasure-code/\" class=\"linkified\">http://docs.ceph.com/docs/jewel/rados/operations/erasure-code/</a></p> <p>The Speaker:<br/>During lock-down he spends his time making plans for when we are not locked down, also: cooking things, photographing them, eating them</p> <p>Location is on Zoom:<br/><a href=\"https://us02web.zoom.us/j/84284444352\" class=\"linkified\">https://us02web.zoom.us/j/84284444352</a><br/>Meeting ID:[masked]<br/>Meeting Password: password will be sent separately by email to users who RSVP-ied. If you didn't get one, please message reborg on Meetup.</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":null,"address1":false,"address2":null,"name":"Online event","postalCode":null,"lon":null,"country":"","city":false},"utcOffset":3600000,"time":1588095000000,"title":"[ONLINE] Tom Hall On \"Erasure Code with SHEC\""},"183217332":{"url":"https://www.meetup.com/Papers-We-Love-London/events/183217332/","description":"<p>Ryan Kennedy from Yammer Engineering will presenting Dapper, a Large-Scale Distributed Systems Tracing Infrastructure paper by  Benjamin H. Sigelman, Luiz André Barroso, Mike Burrows, Pat Stephenson, Manoj Plakal, Donald Beaver, Saul Jaspan and Chandan Shanbhag.</p> <p>Doors open at 6:30 pm; the presentation will begin at 7:00 pm</p> <p>We hope that you'll read <a href=\"https://raw.githubusercontent.com/papers-we-love/papers-we-love/master/distributed_systems/dapper-a-large-scale-distributed-tracing-infrastructure.pdf\">the paper</a> before the Meetup (and if you don't, no worries).  </p> <p><b>Ryan's Bio:</b><br/>Ryan Kennedy is an Infrastructure Engineer at Yammer in way over his head. When he's not busy cobbling together databases from the odds and ends he finds in Maven Central he can often be found scouring the world for inedible nachos.</p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":3600000,"time":1402507800000,"title":"#2 Ryan Kennedy - Dapper, a Distributed Systems Tracing Infrastructure"},"247609472":{"url":"https://www.meetup.com/Papers-We-Love-London/events/247609472/","description":"<p>Bodil Stokke (<a href=\"https://bodil.lol\" class=\"linkified\">https://bodil.lol</a> and <a href=\"https://twitter.com/bodil\" class=\"linkified\">https://twitter.com/bodil</a>) presents the paper \"Basic Polymorphic Type Checking\" by Luca Cardelli. The paper is available here: <a href=\"http://lucacardelli.name/Papers/BasicTypechecking.pdf\" class=\"linkified\">http://lucacardelli.name/Papers/BasicTypechecking.pdf</a></p> <p>Abstract</p> <p>Cardelli's 1987 paper \"Basic Polymorphic Type Checking\" was, according to the author, the first attempt to explain the Hindley-Milner-Damas type system in a way that would be accessible to people who weren't either Hindley, Milner or Damas. It served as my first gentle introduction to the mysteries of type checking, back when I was obsessed with the conceit that the world needed another Lisp with a type system and I was going to have to build it (it would be called BODOL, because obviously).</p> <p>It was my first significant journey into the mysteries of type checking, to a large extent because it delivers what it promises on the tin: it's an explanation of a method for type checking and inference with parametric polymorphism that's accessible to the average programmer, as opposed to the average logician, and so I'd like to share that journey by walking through and implementing the described type checker with you, but maybe in a language more accessible to modern programmers than the Modula-2 of Cardelli's implementation.</p> <p>The Speaker</p> <p>Born into an aristocratic Russian-German family, Bodil (<a href=\"https://bodil.lol\" class=\"linkified\">https://bodil.lol</a> <a href=\"https://twitter.com/bodil\" class=\"linkified\">https://twitter.com/bodil</a>) traveled widely around the Soviet Union as a child. Largely self-educated, she developed an interest in computer science during her teenage years. According to her later claims, in 1989 she embarked on a series of world travels, visiting Europe, the Americas, and India. She alleged that during this period she encountered a group of mathematical adepts, the “Haskell Language and Library Committee,” who sent her to Glasgow, Scotland, where they trained her to develop her powers of category theory. Both contemporary critics and later biographers have argued that some or all of these foreign visits were fictitious, and that she spent this period writing JavaScript.</p> <p>Bodil was a controversial figure during her lifetime, championed by supporters as an enlightened guru and derided as a fraudulent charlatan by critics. Her doctrines influenced the spread of Homotopy Type Theory in the West as well as the development of Western computer science currents like dependent types, blockchains and isomorphic JavaScript.</p> <p>The meetup</p> <p>PapersWeLove (<a href=\"http://paperswelove.org\" class=\"linkified\">http://paperswelove.org</a>) London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":0,"time":1518721200000,"title":"Bodil Stokke on \"Basic Polymorphic Type Checking\" by Luca Cardelli"},"222094026":{"url":"https://www.meetup.com/Papers-We-Love-London/events/222094026/","description":"<p>Oliver Charles presents <a href=\"https://personal.cis.strath.ac.uk/conor.mcbride/Kleisli.pdf\">Conor McBride's \"Kleisli Arrows of Outrageous Fortune\"</a>. </p> <p>For a long time, it wasn't clear how to get purely functional programs to actually \"do\" anything. Finally, a breakthrough came by sharing ideas from category theory to bring monads into functional programming, as a way to model and manage side effects. However, little has been done to ensure that entire interaction sequences <i>make sense</i>. For example, many functional programming languages will allow you to open a file handle, close it, and then try and read from it - clearly a nonsensical sequence of operations! In \"Kleisli Arrows of Outrageous Fortune\", Conor McBride shows us how we can borrow more ideas from the literature, introducing a new formulation of <i>indexed monads</i> - a structure with close connections to slice categories. Given these new tools, he demonstrates that these monads can correspond to enforcing logical properties - following in the tradition of propositions-as-types, we now have the ability to begin to encode Hoare logic pre- and post-conditions on our programs.</p> <p>About Oliver:</p> <p>Ollie has always had an interest in functional programming and correctness from a very early age - puzzled by how easy it seemed to make things go wrong, even by accident! Currently, he's the lead Haskell developer at the London startup Fynder, and spends the rest of his free time either working on open-source Haskell libraries, or exploring the latest functional programming research. One day, he hope's write software he can truly believe in, but there's a long way to go...</p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":3600000,"time":1432144800000,"title":"Oliver Charles on \"Kleisli Arrows of Outrageous Fortune\""},"228749056":{"url":"https://www.meetup.com/Papers-We-Love-London/events/228749056/","description":"<p>Phil Potter on Dolstra's \"The Purely Functional Software Deployment Model\"</p> <p>Don't forget to RSVP to Skillsmatter too: <a href=\"https://skillsmatter.com/meetups/7857-dolstra-s-the-purely-functional-software-deployment-model-p\"><a href=\"https://skillsmatter.com/meetups/7857-dolstra-s-the-purely-functional-software-deployment-model-p\" class=\"linkified\">https://skillsmatter.com/meetups/7857-dolstra-s-the-purely-functional-software-deployment-model-p</a></a></p> <p>This PhD thesis is about software deployment. Deployment is not often seen as an academic topic, but the reason I like this thesis is because it takes an academic approach of defining the problem carefully and choosing the correct abstractions, and in doing so enables the application of knowledge from other areas such as memory management and memoization to the seemingly unrelated field of deployment.</p> <p>The thesis collects the theoretical ideas together into a practical tool called nix, a package manager which is still in use today. </p> <p>You don't need to read the whole thesis for this talk!  It would be more than enough to read just Part 1 (ie chapters 1 and 2). Chapter 1 states the problem and reviews previous work, including other package managers. Chapter 2 gives a brief overview of the whole nix system.</p> <p>Eelco Dolstra. The Purely Functional Software Deployment Model. PhD thesis, Faculty of Science, Utrecht, The Netherlands. January 2006. <br/>ISBN[masked].</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":0,"time":1455733800000,"title":"Phil Potter on Dolstra's \"The Purely Functional Software Deployment Model\""},"231247776":{"url":"https://www.meetup.com/Papers-We-Love-London/events/231247776/","description":"<p><i>As always, please sign up <a href=\"https://skillsmatter.com/meetups/8148-papers-we-love\">on Skills Matter</a> too.</i></p> <p>Sorry for the short notice. As Tom mentioned at the end of our meetup on Tuesday, we've got a bonus speaker for May!</p> <p>At this meetup, Gareth Morgan will presenting on <a href=\"http://www.cs.rpi.edu/~cutler/classes/advancedgraphics/S08/lectures/kajiya.pdf\">The Rendering Equation</a>.  This paper is one of the most important 3D graphics papers in the subject's history. The rendering equation put forth by James Kajiya is the foundation of many of the rendering techniques used in modern graphics. Anytime a computer generates physically accurate image it is actually attempting to solve the rendering equation.</p> <p><a href=\"https://twitter.com/griffin1977\">Gareth</a> has been involved in games and 3D graphics since 1999, starting at Silicon Graphics followed by several games companies. He spent eight years at Imagination Technologies researching sophisticated GPU rendering techniques using their ray tracing technology. Currently he is co-founder and CEO at Axum Graphics, developing 3D content creation tools for VR filmmakers.</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":3600000,"time":1464197400000,"title":"Gareth Morgan on \"The Rendering Equation\" by James Kajiya"},"250581572":{"url":"https://www.meetup.com/Papers-We-Love-London/events/250581572/","description":"<p>Ron Pressler (<a href=\"https://twitter.com/pressron\" class=\"linkified\">https://twitter.com/pressron</a>, <a href=\"https://pron.github.io\" class=\"linkified\">https://pron.github.io</a>) presents a talk with title \"On the Nature of Abstraction: An introduction to the mathematical analysis of programs\" inspired by the papers \"Binary Relations for Abstraction and Refinement\" by David A Schmidt and \"The Existence of Refinement Mappings\" by Martín Abadi and Leslie Lamport.</p> <p>Download the papers at:<br/><a href=\"http://www.cis.ksu.edu/~schmidt/papers/relations.ps.gz\" class=\"linkified\">http://www.cis.ksu.edu/~schmidt/papers/relations.ps.gz</a><br/><a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/abadi-existence.pdf\" class=\"linkified\">https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/abadi-existence.pdf</a></p> <p>Abstract</p> <p>There are two main approaches to analysing programs mathematically: representing the program as a formal object, a syntax with some meaning, or as an object representing its possible behaviours, regardless of the language used to encode it. Programming language theory analyses programs using the first approach, while program analysis (formal methods) research uses the latter.</p> <p>The second, language-agnostic approach will be the focus of the talk, which will be a brief introduction to the mathematical analysis of programs and its core ideas. I will present Kripke structures as a general, language-agnostic, representation of programs, introduce the central principle of abstraction as Galois connections, and finally show an important result that enables a simple yet powerful technique for analysing programs.</p> <p>The Speaker</p> <p>Ron Pressler is a veteran programmer, working at Oracle, where he leads the project to add delimited continuations, lightweight concurrency and tail-calls to the Java Virtual Machine.</p> <p>Logistic</p> <p>We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1526578200000,"title":"Ron Pressler: On the Nature of Abstraction"},"246639398":{"url":"https://www.meetup.com/Papers-We-Love-London/events/246639398/","description":"<p>Neil Brown (<a href=\"https://academiccomputing.wordpress.com\" class=\"linkified\">https://academiccomputing.wordpress.com</a>) presents a talk about the paper \"An Empirical Investigation into Programming Language Syntax\" by Stefik and Siebert (<a href=\"https://dl.acm.org/citation.cfm?id=2534973&amp;CFID=849175684&amp;CFTOKEN=92613695\" class=\"linkified\">https://dl.acm.org/citation.cfm?id=2534973&amp;CFID=849175684&amp;CFTOKEN=92613695</a>).</p> <p>Abstract</p> <p>Program code has a dual aspect: it is understandable both by computers and by humans. Ever since computing moved on from directly entering numerical opcodes, we have had increasingly free rein to design for the humans more than the machines. However, this has been done in an evidence-free manner: designers choose keywords and notations without scientifically testing any aspects of their usability. This paper, \"An Empirical Investigation into Programming Language Syntax\" by Stefik and Siebert, aims to address this issue by scientifically comparing programming language syntax usability for novices.</p> <p>In this talk, I will summarise the methods and key results of the paper -- but just as interesting are the broader questions raised by the paper. Are all programming languages less usable than they could be? Should programming language and tool design become more scientific? What role should evidence have in design?</p> <p>This talk should be of interest to anyone who has ever done a little programming, and will be especially thought-provoking for those who have ever tried to teach programming to friends, relatives, colleagues, or students.</p> <p>The meetup</p> <p>PapersWeLove (<a href=\"http://paperswelove.org\" class=\"linkified\">http://paperswelove.org</a>) London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>The Speaker</p> <p>Neil (<a href=\"http://www.twistedsquare.com\" class=\"linkified\">http://www.twistedsquare.com</a>) works as a computing education researcher at King's College London; his role combines software development and writing research papers. He works as part of a team which develops two IDEs aimed at novice programmers: BlueJ (<a href=\"https://www.bluej.org\" class=\"linkified\">https://www.bluej.org</a>) and Greenfoot (<a href=\"https://www.greenfoot.org/door\" class=\"linkified\">https://www.greenfoot.org/door</a>). He also helps to maintain a large-scale repository of data on novice programmer activity, collected from BlueJ, which contains details of activity from over a million users.</p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":0,"time":1516300200000,"title":"Programming Language Design: The Missing Evidence"},"259694135":{"url":"https://www.meetup.com/Papers-We-Love-London/events/259694135/","description":"<p>Claudio Martella (Google Sciengineer, <a href=\"https://twitter.com/claudiomartella\" class=\"linkified\">https://twitter.com/claudiomartella</a>) presents the talk:</p> <p>\"Massive-scale graph partitioning with Giraph\"</p> <p>Based on his paper \"Spinner: Scalable Graph Partitioning in the Cloud\" (by Claudio Martella, Dionysios Logothetis, Andreas Loukas, Georgos Siganos) downloadable from <a href=\"https://arxiv.org/abs/1404.3861\" class=\"linkified\">https://arxiv.org/abs/1404.3861</a></p> <p>Abstract</p> <p>We present Spinner, a scalable and adaptive graph partitioning algorithm based on label propagation designed on top of the Pregel model. Spinner scales to massive graphs, produces partitions with locality and balance comparable to the state-of-the-art and efficiently adapts the partitioning upon changes. We describe our algorithm and its implementation in the Pregel programming model that makes it possible to partition billion-vertex graphs. We evaluate Spinner with a variety of synthetic and real graphs and show that it can compute partitions with quality comparable to the state-of-the art. In fact, by using Spinner in conjunction with the Giraph graph processing engine, we speed up different applications by a factor of 2 relative to standard hash partitioning.<br/>The paper was presented in 2017 at the 33rd IEEE International Conference on Data Engineering (ICDE)</p> <p>The Speaker</p> <p>Claudio Martella is a Sciengineer, currently working at Google. He is interested in understanding and modeling complex behaviour with data, by means of sensors, machine learning, and large-scale distributed systems. He holds a PhD in Computer Science from Vrije Universiteit Amsterdam. He is also a member of the Hadoop project Apache Giraph.</p> <p>Location:</p> <p>Wellcome Trust, Gibbs Building<br/>215 Euston Road<br/>London NW1 2BE<br/><a href=\"https://goo.gl/maps/njW8Gp38P6q\" class=\"linkified\">https://goo.gl/maps/njW8Gp38P6q</a></p> <p>The nearest tube station is Euston/Euston Square. The schedule:</p> <p>• 6.30pm: pizza and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.525543212890625,"address1":"215 Euston Road","address2":null,"name":"Wellcome Trust","postalCode":null,"lon":-0.1349560022354126,"country":"gb","city":"London"},"utcOffset":0,"time":1553193000000,"title":"Claudio Martella presents \"Massive-scale graph partitioning with Giraph\""},"246935780":{"url":"https://www.meetup.com/Papers-We-Love-London/events/246935780/","description":"<p>Chas Emerick (<a href=\"http://cemerick.com\" class=\"linkified\">http://cemerick.com</a> &amp; <a href=\"http://twitter.com/cemerick\" class=\"linkified\">http://twitter.com/cemerick</a>) presents a survey of metric and spatial data structures, guided by the book 'Foundations of Multidimensional and Metric Data Structures' by Hanan Samet, with particular details on two data structures and their papers:</p> <p>* 'Corner Stitching: A Data-Structuring Technique for VLSI Layout Tools' by Ousterhout, (<a href=\"https://www2.eecs.berkeley.edu/Pubs/TechRpts/1983/CSD-83-114.pdf\" class=\"linkified\">https://www2.eecs.berkeley.edu/Pubs/TechRpts/1983/CSD-83-114.pdf</a>)<br/>* 'R-trees: A Dynamic Index Structure for Spatial Searching' by Guttman,(<a href=\"https://klevas.mif.vu.lt/~algis/DSA/guttman.pdf\" class=\"linkified\">https://klevas.mif.vu.lt/~algis/DSA/guttman.pdf</a>)</p> <p>Abstract</p> <p>Most of us are familiar with the notion of indexes thanks to databases, but that exposure belies the rich kaleidoscope of techniques available to provide efficient representations of how objects and entities relate to each other or to the space that they occupy. Disciplines as varied as computer graphics, GIS, gaming, bioinformatics, and document analysis and layout have their own unique demands and data modeling requirements which have driven the development of hundreds of different ways to \"index\" their respective data. This presentation will touch on a dozen different such approaches, sketching out their strengths and tradeoffs and common applications, all Samet's encyclopedic survey of the field. We'll also do deeper dives into a couple of the papers it cites that describe data structures you indirectly rely upon every day via mapping services and digital circuit design and fabrication.</p> <p>The meetup</p> <p>PapersWeLove (<a href=\"http://paperswelove.org\" class=\"linkified\">http://paperswelove.org</a>) London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>The Speaker</p> <p>Chas Emerick (<a href=\"http://cemerick.com\" class=\"linkified\">http://cemerick.com</a> &amp; <a href=\"http://twitter.com/cemerick\" class=\"linkified\">http://twitter.com/cemerick</a>) is a software engineer who has been building systems to analyze and consume PDF documents for 15 years, now with PDFDATA.io<br/>(<a href=\"https://www.PDFDATA.io\" class=\"linkified\">https://www.PDFDATA.io</a>). His other interests include compilers, programming language theory, distributed systems, database implementation, future computing of all sorts, circuit design via FPGAs,<br/>ethics in technology, and radical politics.</p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":0,"time":1517337000000,"title":"A survey of spatial data structures and their applications"},"249597327":{"url":"https://www.meetup.com/Papers-We-Love-London/events/249597327/","description":"<p>Bohdan Orlov (<a href=\"https://twitter.com/bohdan_orlov\" class=\"linkified\">https://twitter.com/bohdan_orlov</a>, <a href=\"https://www.moonpig.com/uk/217ab/\" class=\"linkified\">https://www.moonpig.com/uk/217ab/</a>) presents a talk with title \"Do MVC like it’s 1979\" inspired by the paper \"The original MVC reports\" by Trygve Reenskaug. The paper is available here: <a href=\"http://folk.uio.no/trygver/2007/MVC_Originals.pdf\" class=\"linkified\">http://folk.uio.no/trygver/2007/MVC_Originals.pdf</a></p> <p>Abstract</p> <p>Modern developers often think:</p> <p>* I know MVC very well<br/>* MVC is not good enough for my projects</p> <p>Consequently, they may look for more “mature” architecture and end up writing a lot of boilerplate code just to make sure the architecture is scalable. In reality, the “mature” architecture could be a premature optimisation for cases where “real” MVC would be sufficient.<br/>Often, the developers are only familiar with one interpretation of the MVC, the one which is popular on their platform. So I suggest to take a step back, or maybe even a giant leap back to the origins of MVC from 1979, to understand how it emerged and which problem it was trying to solve.<br/>Understanding the original idea and reasoning will help us to trace MVC legacy in modern architectural patterns, and more importantly to implement our own hand-crafted version of MVC.</p> <p>The Speaker</p> <p>Bohdan is an iOS developer, and he believes in getting things done, preferably fast and beautiful (in this order). He practices pragmatic software design at work and occasionally writes and gives talks about becoming better at it (<a href=\"https://twitter.com/bohdan_orlov\" class=\"linkified\">https://twitter.com/bohdan_orlov</a>). This way, he fulfils his desire to share his acquired knowledge with his fellow developers.<br/>Currently, he is leading a team of iOS developers at <a href=\"https://www.moonpig.com/uk\" class=\"linkified\">https://www.moonpig.com/uk</a>.</p> <p>The meetup</p> <p>PapersWeLove (<a href=\"http://paperswelove.org\" class=\"linkified\">http://paperswelove.org</a>) London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1524072600000,"title":"Bohdan Orlov: \"Do MVC like it’s 1979\""},"243275402":{"url":"https://www.meetup.com/Papers-We-Love-London/events/243275402/","description":"<p><b><a href=\"http://lukechurchnet.appspot.com/\">Luke Church</a> presents: \"<a href=\"https://liveprogramming.github.io/2013/papers/liveness.pdf\">A perspective on the evolution of live programming</a>\", a paper by S.L. Tanimoto</b></p> <p>PapersWeLove London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We are meeting at the <a href=\"https://www.google.co.uk/maps/place/uSwitch/@51.5035192,-0.0775132,17z/data=!3m1!4b1!4m5!3m4!1s0x487604a8407ed955:0xffe5a6fc4b8acff3!8m2!3d51.5035192!4d-0.0753192?hl=en\">uSwtich offices</a> near Tower Bridge with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.</p> <p>• 7:00pm: presentation starts</p> <p>Abstract</p> <p>Live programming, or the art and science of changing programs as they're running, is a subject of increasing interest to a wide audience, including musicians, scientists, compiler engineers and UI designers.<br/>In this paper, Steven Tanimoto considers the strengths and challenges of live programming and extends his original taxonomy of the 'levels of liveness' to include predictive systems.<br/>In the talk, I'll outline what live programming is, discuss the taxonomy and give demos of systems at the various levels of liveness. I'll conclude with a consideration of how the higher levels of liveness might be a productive avenue by which to explore a unification of machine learning and programming.</p> <p>The Speaker</p> <p><a href=\"http://www.lukechurch.net/\">Luke</a> is a researcher at the University of Cambridge and Google. He studies cognitive, social and philosophical issues that affect the usability of programming. Luke is primarily interested in broadening the availability of programming by building systems that let people change their mind.</p> ","photos":[],"venue":{"lat":null,"address1":false,"address2":null,"name":null,"postalCode":null,"lon":null,"country":false,"city":false},"utcOffset":3600000,"time":1506015000000,"title":"Luke Church with \"A perspective on the evolution of live programming\""},"226303374":{"url":"https://www.meetup.com/Papers-We-Love-London/events/226303374/","description":"<p>This is at Skills Matter so you will need to sign up there too <a href=\"https://skillsmatter.com/meetups/7466-camilla-montonen-support-vector-machines-and-kernels-for-computational-biology\" class=\"linkified\">https://skillsmatter.com/meetups/7466-camilla-montonen-support-vector-machines-and-kernels-for-computational-biology</a> Thanks!</p> <p>Ben­Hur A, Ong CS, Sonnenburg S, Schölkopf B, Rätsch G (2008) Support Vector Machines and Kernels for Computational Biology.</p> <p><a href=\"http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000173\" class=\"linkified\">http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000173</a></p> <p>The widespread adoption of high­throughput sequencing machinery has produced an unprecedented amount of genomic data for biologists to analyse. To fully leverage the potential patterns hidden in the petabytes of DNA and RNA sequence information requires the use of machine learning algorithms and specialised kernels, which can capture the valuable domain knowledge provided by biological scientists. A common problem in computational biology is that of binary classification. Support vector machines (SVMs) have achieved good results in this domain and have thus been eagerly adopted by computational biology researchers. Ben­Hur et al provide a gentle introduction to support vector machines and kernels in the context of binary biological prediction problems.</p> <p>To explain the concepts of large margin separation and kernel functions, Ben­Hur et al use a computational biology problem known as splice­site recognition. In eukaryotic organisms, the process of gene expression involves transcribing a sequence of DNA into a molecule known as premature mRNA. Premature mRNA contains two types of regions: coding regions known as exons and 'junk' regions known as introns. The boundary of these two sites is often recognized by the presence of specific dimers GT and AG at these sites. However, only 0.1%–1% of occurrences of these dimers in the genome represent true locations of splice sites, which leads to an interesting question: Can we use support vector machines to help classify sites as splice sites and non­splice sites?</p> <p>Ben­Hur et al explain the principles of maximum margin separation, kernel functions and classifier performance by exploring various aspects of this question. The paper is a great and gentle introduction into the world of support vector machines and also gives insight into some cool applications of machine learning technology. Moreover all of the data and code used in the paper is open­source. In six words: this is a paper to love!</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":0,"time":1447871400000,"title":"Camilla Montonen-Support Vector Machines and Kernels for Computational Biology."},"229221711":{"url":"https://www.meetup.com/Papers-We-Love-London/events/229221711/","description":"<p><b>Fouad Mardini on \"Worst-case analysis of a new heuristic for the traveling salesman problem\" by Nicos Christofides</b></p> <p>The Traveling Salesman Problem might very well be the most studied problem in combinatorial optimization. Much of this interest comes from the fact that the TSP is an NP hard problem, yet the TSP is studied on its own merits as it has applications in many fields.</p> <p>We will use the paper of Christofides as a starting point to discuss the NP complexity class and approximation algorithms to intractable problems. Christofides algorithm is simple and elegant, yet gives the best known approximation ratio for the symmetric TSP.</p> <p>Along the way we will detour into graph matchings and other interesting tidbits such as Aurora's Euclidean TSP approximation scheme and the Held-Karp LP relaxation.</p> <p>If you are coming, please sign up at Skills Matter also <a href=\"https://skillsmatter.com/meetups/7906-worst-case-analysis-of-a-new-heuristic-for-the-traveling-salesman-problem-by-nicos-christofides\" class=\"linkified\">https://skillsmatter.com/meetups/7906-worst-case-analysis-of-a-new-heuristic-for-the-traveling-salesman-problem-by-nicos-christofides</a>  </p> <p><b>Fouad Mardini</b> currently works as a software engineer in London. He recently finished studying for a Masters in CS at Bonn, where he developed his interest in combinatorial optimization.</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":0,"time":1458153000000,"title":"Fouad Mardini on Christofides on The Travelling Salesman"},"266943387":{"url":"https://www.meetup.com/Papers-We-Love-London/events/266943387/","description":"<p>In connection with the presence in town of the CREST Open Workshop (<a href=\"http://crest.cs.ucl.ac.uk/cow/62/\" class=\"linkified\">http://crest.cs.ucl.ac.uk/cow/62/</a>), PWL London is organising a special afternoon of automatic program repair papers and related topics! 4 speakers, 4 papers, 4 meetups in one!</p> <p>The goal of the event is to bring together academia and industry experts on the topic of automatic program repair (<a href=\"https://program-repair.org\" class=\"linkified\">https://program-repair.org</a>), offering a relaxed environment to exchange opinions ahead of the workshop. Everyone's invited, please join us to learn something new!</p> <p>-Schedule-</p> <p>* 14:00-14:15 Introduction</p> <p>* 14:15-15:00 \"Compiler Fuzzing: How Much Does It Matter?\" Michael Marcozzi (<a href=\"https://srg.doc.ic.ac.uk/people/michael-marcozzi/\" class=\"linkified\">https://srg.doc.ic.ac.uk/people/michael-marcozzi/</a>) A study of the impact of 45 bugs in the LLVM compiler over the reliability of 309 Debian packages, comparing bugs found by fuzzing the compiler, by compiling real code and by formal verification.</p> <p>* 15:00-15:45 \"Coccinelle: 10 Years of Automated Evolution in the Linux Kernel\" by Julia Lawall (<a href=\"https://pages.lip6.fr/Julia.Lawall/\" class=\"linkified\">https://pages.lip6.fr/Julia.Lawall/</a>). The Coccinelle C-program matching and transformation tool was first released in 2008 to facilitate specification and automation in the evolution of Linux kernel code. This talk studies the impact of Coccinelle on Linux kernel development and the features of Coccinelle that have made it possible.</p> <p>BREAK</p> <p>* 16:15-17:00 \"TripleAgent: Monitoring, Perturbation and Failure-obliviousness for Automated Resilience Improvement in Java Applications\" by Martin Monperrus (<a href=\"https://www.monperrus.net/martin\" class=\"linkified\">https://www.monperrus.net/martin</a>). In this paper, we present a novel resilience improvement system for Java applications. The unique feature of this system is to combine automated monitoring, automated perturbation injection, and automated resilience improvement. See <a href=\"https://arxiv.org/pdf/1812.10706\" class=\"linkified\">https://arxiv.org/pdf/1812.10706</a></p> <p>* 17:00-17:45 \"Using MDEOptimiser to quickly apply search-based software engineering to your domain-specific problem\" Alexandru Burdusel (<a href=\"https://nms.kcl.ac.uk/alex.burdusel/\" class=\"linkified\">https://nms.kcl.ac.uk/alex.burdusel/</a>)</p> <p>Drinks and snacks provided. Feel free to stay longer for a friendly pint afterwards (&gt;6pm Craft Beers Co., 233 Old St, London, EC1V 9HE). For any info, please get in touch: paperswelove.london[at]gmail.com</p> <p>Location:</p> <p>Microsoft Reactor London<br/>70 Wilson Street<br/>EC2A 2DB<br/><a href=\"https://goo.gl/maps/JjGrPNB8a9N2\" class=\"linkified\">https://goo.gl/maps/JjGrPNB8a9N2</a></p> <p>The nearest tube station is Moorgate, Old Street, Liverpool St.</p> ","photos":[],"venue":{"lat":51.52177429199219,"address1":"70 Wilson Street","address2":null,"name":"The Microsoft Reactor London","postalCode":null,"lon":-0.08459799736738205,"country":"gb","city":"London"},"utcOffset":0,"time":1579441500000,"title":"CREST/PWL Special Event"},"240577437":{"url":"https://www.meetup.com/Papers-We-Love-London/events/240577437/","description":"<p>Thomas Depierre (@DianaOlympos) will be presenting the paper \"<b>Programming with Abstract Data Types</b>\" by B. Liskov and S. Zilles 1974\", available here for reading before the meetup:</p> <p><a href=\"http://web.cs.iastate.edu/~hridesh/teaching/362/07/01/papers/p50-liskov.pdf\"><a href=\"http://web.cs.iastate.edu/~hridesh/teaching/362/07/01/papers/p50-liskov.pdf\" class=\"linkified\">http://web.cs.iastate.edu/~hridesh/teaching/362/07/01/papers/p50-liskov.pdf</a></a></p> <p>Along the course of the past 50 years, programming centred mainly around abstraction, being for control flow, operations to execute or data objects and structure. In this foundational paper, B. Liskov and S. Zilles described a concept that is now so deeply embedded into our programming ecosystem that we forget why it was even invented. Come join us to explore what Abstract Data Types still have to teach us.</p> <p><b>About Thomas</b>:</p> <p>Coming from a background of maths and EE, Thomas ended up as a Maker at Ascential because he wants to make systems works. Which should tells you how much he loves the mess the field of computing is in. He could dissert on Linear Algebra as much as on the state of magic in Science Fiction, but you would have to offer him a tea to get him that far. Or you can ask him about System Safety and Human Factors and lose a couple hours to a rant on how bad our software is. Up to you.</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/4/9/d/8/600_461958904.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/7/a/1/2/600_461971250.jpeg","height":null,"width":null}],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1497547800000,"title":"Thomas Depierre with \"Programming with Abstract Data Type\" by Barbara Liskov"},"258966082":{"url":"https://www.meetup.com/Papers-We-Love-London/events/258966082/","description":"<p>Justin Cormack (<a href=\"https://www.cloudatomiclab.com\" class=\"linkified\">https://www.cloudatomiclab.com</a>, <a href=\"https://twitter.com/justincormack\" class=\"linkified\">https://twitter.com/justincormack</a>) presents the paper:</p> <p>\"ACL's Don't\" by Tyler Close.</p> <p>Download Paper: <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.406.4684&amp;rep=rep1&amp;type=pdf\" class=\"linkified\">http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.406.4684&amp;rep=rep1&amp;type=pdf</a></p> <p>Abstract</p> <p>Access control lists, in the form of RBAC and related technology are everywhere. They are fundamental to how we design authorisation mechanisms in systems today. However they don’t actually work, as this lovely, short and beautifully written paper by Tyler Close from 2009 explains, and major security issues such as the recent Kubernetes vulnerability continue to happen because of this.</p> <p>The Speaker</p> <p>Justin Cormack is a security engineer at Docker, based in Cambridge.</p> <p>Location:</p> <p>Wellcome Trust, Gibbs Building<br/>215 Euston Road<br/>London NW1 2BE<br/><a href=\"https://goo.gl/maps/njW8Gp38P6q\" class=\"linkified\">https://goo.gl/maps/njW8Gp38P6q</a></p> <p>The nearest tube station is Euston/Euston Square. The schedule:</p> <p>• 6.30pm: pizza and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.525543212890625,"address1":"215 Euston Road","address2":null,"name":"Wellcome Trust","postalCode":null,"lon":-0.1349560022354126,"country":"gb","city":"London"},"utcOffset":0,"time":1551378600000,"title":"Justin Cormack presents \"ACLs don’t\""},"264717689":{"url":"https://www.meetup.com/Papers-We-Love-London/events/264717689/","description":"<p>Jaseem Abid (<a href=\"https://blog.jabid.in\" class=\"linkified\">https://blog.jabid.in</a>) presents \"An Incremental Approach to Compiler Construction” by Abdulaziz Ghuloum. Download the paper here: <a href=\"http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf\" class=\"linkified\">http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf</a></p> <p>The talk</p> <p>This is a paper Jaseem has been toying around for a very long time. He spent quite a lot of his weekends hacking on an implementation (<a href=\"http://github.com/jaseemabid/inc\" class=\"linkified\">http://github.com/jaseemabid/inc</a>). It's an educational approach to writing your first compiler and it should be quite valuable to a large number of everyday software engineers. Jaseem will be showing some code, present a heavily annotated paper and leave people with some ideas that they might be able to play around with.</p> <p>The Speaker</p> <p>Jaseem is a computer programmer interested in compilers, distributed systems, programming languages and Haskell. He spent 12 weeks at Recurse Center from May 22 to Aug[masked] trying to be a better programmer. He currently work at Monzo in London making banking awesome! You can reach Jaseem @jaseemabid</p> <p>Logistic</p> <p>We are back where we started, at uSwitch (cc: ZPG) (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1569519000000,"title":"Jaseem Abid on \"An Incremental Approach to Compiler Construction\""},"255480742":{"url":"https://www.meetup.com/Papers-We-Love-London/events/255480742/","description":"<p>Dimos Raptis (<a href=\"https://twitter.com/dimosr7\" class=\"linkified\">https://twitter.com/dimosr7</a>) presents the paper \"Dynamo: Amazon’s Highly Available Key-value Store\" by Amazon (many authors).</p> <p>Download the paper from:<br/><a href=\"https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf\" class=\"linkified\">https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf</a></p> <p>Abstract</p> <p>During the last decade, Internet companies have achieved unprecedented growth. As a result of this, their systems needed to cope with workloads they had never experienced before. The existing data storage technologies were not capable of supporting these workloads, because of inherent limitations, such as single point of failures, vertical scaling etc.<br/>In an effort to solve these problems, companies started re-evaluating the architecture of existing systems and started building a new generation of systems, focused on a more distributed, scalable and highly available architecture. Of course, this came with a whole new set of technical challenges that they needed to address.<br/>In this talk, we will be looking at a set of core techniques Amazon used to build their key-value store, referred to as Dynamo in the related paper. We will explain what are the problems they had to address and how these techniques helped them.<br/>Given that this was amongst the seminal papers in the space of distributed systems, we will also visit some examples of open-source systems that leveraged some of these techniques.</p> <p>The Speaker</p> <p>Dimos has an MEng in Eletrical and Computer Engineering from the National Technical University of Athens and an MSc in Software Engineering from Imperial College London. Currently, he's working as a Software Engineer in London. His main areas of passion are distributed systems, clean &amp; elegant software and testing, but this list keeps growing alarmingly. You can tweet him at: <a href=\"https://twitter.com/dimosr7\" class=\"linkified\">https://twitter.com/dimosr7</a></p> <p>Logistic</p> <p>We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> <p>Meetup are captured on video and uploaded at <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1540488600000,"title":"Dimos Raptis on \"Dynamo: Amazon’s Highly Available Key-value Store\""},"256142039":{"url":"https://www.meetup.com/Papers-We-Love-London/events/256142039/","description":"<p>Steffen Zschaler (www.steffen-zschaler.de , <a href=\"https://twitter.com/szschaler\" class=\"linkified\">https://twitter.com/szschaler</a>) presents a talk titled</p> <p>\"Language workbenches: Better domain-specific languages more quickly\"</p> <p>Inspired by \"Language workbenches\" by Martin Fowler (<a href=\"https://www.martinfowler.com/articles/languageWorkbench.html\" class=\"linkified\">https://www.martinfowler.com/articles/languageWorkbench.html</a>) and \"Evaluating and comparing language workbenches: Existing results and benchmarks for the future\" by Erdweg and others (available at <a href=\"https://ir.cwi.nl/pub/23990/23990B.pdf\" class=\"linkified\">https://ir.cwi.nl/pub/23990/23990B.pdf</a>).</p> <p>Abstract</p> <p>Domain-specific or \"little\" languages have a long history. We all use them, but rarely think about designing our own, even though there are clear and well-demonstrated benefits. The main reason is that building good domain-specific languages and, in particular, good tools and infrastructure for them, is difficult, costly, tedious, and often doesn’t immediately result in a product you can sell. Language workbenches fundamentally alter these trade-offs: By leveraging strong language-engineering and automated-generation techniques, they can make it easy and fun to produce new domain-specific languages and sophisticated support infrastructure for them. This finally makes it possible to develop domain-specific languages that work for end users rather than for programmers. In this talk, we use two articles on language workbenches to explore this exciting space. We will look at the core underlying principles of language workbenches and, through brief demonstrations, look at examples of three fundamentally different types of language workbenches.</p> <p>The Speaker</p> <p>Steffen Zschaler is a senior lecturer in computer science at King’s College London. He has a Dipl-Inf. degree and a Dr. rer. nat. from Technische Universität Dresden, Germany. His research has focused on modelling software systems through higher-level, domain-specific languages, and in particular on the development of foundational theory and generic tooling to support the development of such languages. More recently, his research focus has specifically been on issues of modularity and reuse in language design and on high-level descriptions and tooling for optimisation problems. Steffen is always on the lookout for interesting applications of these techniques and collaborations with industrial partners.</p> <p>Logistic</p> <p>Location: Droit Fintech - The Office Group - Henry Wood House, 2 Riding House Street W1W 7FA ( <a href=\"https://www.theofficegroup.co.uk/office/henry-wood-house/\" class=\"linkified\">https://www.theofficegroup.co.uk/office/henry-wood-house/</a>).</p> <p>Map: <a href=\"https://goo.gl/maps/yXknNPLUqFA2\" class=\"linkified\">https://goo.gl/maps/yXknNPLUqFA2</a> . The nearest tube station is Oxford Circus. The schedule:</p> <p>• 6.30pm: pizza and drinks (Kindly sponsored by Droit Fintech <a href=\"https://droit.tech\" class=\"linkified\">https://droit.tech</a>)<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.517887115478516,"address1":"2 Riding House Street ","address2":null,"name":"Droit Fintech - The Office Group","postalCode":null,"lon":-0.14229199290275574,"country":"gb","city":"London"},"utcOffset":0,"time":1542220200000,"title":"Steffen Zschaler presents \"Language workbenches: Better DSLs more quickly\""},"243775403":{"url":"https://www.meetup.com/Papers-We-Love-London/events/243775403/","description":"<p><a href=\"https://www.microsoft.com/en-us/research/people/simonpj/\">Simon Peyton Jones</a> presents: \"<b>Getting from A to B: fast route-finding using slow computers</b>\", a talk inspired by \"<a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2004/07/tr-2004-24.pdf\">Computing the shortest path: A* search meets graph theory</a>\" paper (Andrew V Goldberg and Chris Harrelson).</p> <p><b>[WARNING]</b> Unfortunately, because of building and safety regulations<b>, we are forced to a max number of 100 people in the room. </b>Please be aware that we will be <b>forced to leave people out</b> if we reach that number<b>. </b>I'm really sorry for this drastic decision but there is no way to predict how many people will show up.</p> <p><b>Abstract</b></p> <p>We all now take it for granted that online maps will rapidly display a fast route from A to B. But these maps are gigantic: a map of Europe has 20 million intersections and 40 million road segments. How can a computer find the shortest path in such a large map, without examining all those intersections and roads?</p> <p>This is a classic graph problem, known as the Shortest Path problem, with solutions that date back to 1960. But in the last couple of decades there has been significant progress that dramatically speeds up the solution.</p> <p>In this talk I'll explain both the old solutions and the new cool ideas. I hope you'll go away with a clear example of how some clever computer science can take a problem that previously required a big, fast computer, and make it fast enough to run on a slow, mobile device.</p> <p><b>Meetup</b></p> <p><a href=\"http://paperswelove.org\">PapersWeLove</a> London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We are meeting at <a href=\"https://www.uswitch.com/about-us/contact-us/\">uSwitch - ZPG</a> offices <a href=\"https://goo.gl/maps/qJXZek4fMNU2\">near Tower Bridge</a> with the following schedule:</p> <p>• <b>6.30pm</b>: networking, pizza and drinks.</p> <p>• <b>7:00pm</b>: presentation starts</p> <p><b>The Speaker</b></p> <p><a href=\"https://en.wikipedia.org/wiki/Simon_Peyton_Jones\">Simon Peyton Jones</a>, MA, MBCS, CEng, graduated from Trinity College Cambridge in 1980. Simon was a key contributor to the design of the now-standard functional language Haskell, and is the lead designer of the widely-used Glasgow Haskell Compiler (GHC). He has written two textbooks about the implementation of functional languages.</p> <p>After two years in industry, he spent seven years as a lecturer at University College London, and nine years as a professor at Glasgow University before moving to Microsoft Research (Cambridge) in 1998.</p> <p>His main research interest is in functional programming languages, their implementation, and their application. He has led a succession of research projects focused around the design and implementation of production-quality functional-language systems for both uniprocessors and parallel machines.</p> <p>More generally, he is interested in language design, rich type systems, software component architectures, compiler technology, code generation, runtime systems, virtual machines, and garbage collection. He is particularly motivated by direct use of principled theory to practical language design and implementation -- that's one reason he loves functional programming so much.</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/9/0/2/7/600_465456903.jpeg","height":null,"width":null}],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1508434200000,"title":"Simon Peyton Jones: \"Getting from A to B: fast route-finding on slow computers\""},"248467200":{"url":"https://www.meetup.com/Papers-We-Love-London/events/248467200/","description":"<p>Nicola Mometto (<a href=\"https://twitter.com/Bronsa_\" class=\"linkified\">https://twitter.com/Bronsa_</a>) presents a talk on \"The Kanren family of languages, a deep dive in μKanren\" inspired by the paper \"μKanren: A Minimal Functional Core for Relational Programming\" by J. Hemann and D. P. Friedman. The paper is available here: <a href=\"http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf\" class=\"linkified\">http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf</a></p> <p>Abstract</p> <p>Kanren is a family of logic and relational programming language, the most known and used dialect is miniKanren, but several others exist.<br/>In this talk we'll go over the history of the Kanren family and we'll dive into the elegant and beautiful implementation of μKanren, an intentionally minimal and compact kernel for Kanren dialects, implementing complete relational semantics in just over 50 lines of code.</p> <p>The Speaker</p> <p>Nicola Mometto is a software developer with interests in functional programming, languages (particularly LISPs) and compiler design. He has developed and maintained several widely used static analysis libraries for Clojure, and is a frequent contributor to the Clojure language. Currently he works at <a href=\"https://www.imandra.ai/\" class=\"linkified\">https://www.imandra.ai/</a> as a R&amp;D engineer working mostly in OCaml at formally verifying financial algorithms.</p> <p>The meetup</p> <p>PapersWeLove (<a href=\"http://paperswelove.org\" class=\"linkified\">http://paperswelove.org</a>) London proudly brings to you the best papers every month! Please join us to read and discuss the most amazing ideas in computer science. We meet at ZPG (<a href=\"https://www.uswitch.com/about-us/contact-us/\" class=\"linkified\">https://www.uswitch.com/about-us/contact-us/</a>) offices near Tower Bridge (<a href=\"https://goo.gl/maps/qJXZek4fMNU2\" class=\"linkified\">https://goo.gl/maps/qJXZek4fMNU2</a>) with the following schedule:</p> <p>• 6.30pm: networking, pizza and drinks.<br/>• 7:00pm: presentation starts</p> ","photos":[],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":0,"time":1521138600000,"title":"Nicola Mometto on \"The Kanren family of languages, a deep dive in μKanren\""},"231387541":{"url":"https://www.meetup.com/Papers-We-Love-London/events/231387541/","description":"<p>Please sign up at <a href=\"https://skillsmatter.com/meetups/8146-papers-we-love-meetup\">Skills Matter</a> also</p> <p>Certain papers change your life. McCarthy’s ‘Recursive Functions of Symbolic Expressions and their Computation by Machine (Part I)’ (1960) changed mine, and so did Landin’s ‘The Next 700 Programming Languages’ (1966). And I remember the moment, halfway through my graduate career, when Guy Steele handed me Reynolds’s ‘Definitional Interpreters for Higher-Order Programming Languages’ (1972).</p> <p>It is now common to explicate the structure of a programming language by presenting an interpreter for that language. If the language interpreted is the same as the language doing the interpreting, the interpreter is called <i>meta-circular</i>. </p> <p>Interpreters may be written at differing levels of detail, to explicate different implementation strategies. For instance, the interpreter may be written in a <i>continuation-passing style</i>; or some of the higher-order functions may be represented explicitly using data-structures, via <i>defunctionalisation</i>. </p> <p>More elaborate interpreters may be derived from simpler versions, thus providing a methodology for discovering an implementation strategy and showing it correct. Each of these techniques has become a mainstay of the study of programming languages, and all of them were introduced in this single paper by Reynolds.</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":3600000,"time":1465320600000,"title":"Philip Wadler - Definitional Interpreters for Higher-Order Programming Languages"},"261069125":{"url":"https://www.meetup.com/Papers-We-Love-London/events/261069125/","description":"<p>Milos Gajdos presents \"Information-centric networking: seeing the forest for the trees\" based on the paper with the same title by Ali Ghodsi &amp; others (<a href=\"https://people.eecs.berkeley.edu/~alig/papers/information-centric-networking-seeing-the-forest-for-the-trees.pdf\" class=\"linkified\">https://people.eecs.berkeley.edu/~alig/papers/information-centric-networking-seeing-the-forest-for-the-trees.pdf</a>).</p> <p>Abstract</p> <p>There have been many recent papers on data-oriented or content-centric network architectures. Despite the voluminous literature, surprisingly little clarity is emerging as most papers focus on what differentiates them from other proposals. We begin this paper by identifying the existing commonalities and important differences in these designs, and then discuss some remaining research issues. After our review, we emerge skeptical (but open-minded) about the value of this approach to networking.</p> <p>The Speaker</p> <p>Milos is a software developer and operator living in London. He works as a freelancer, mostly hacks on Go and yells at broken Clouds. He enjoys machine learning, AI, Robots and speculating about future technologies. He started Kubernetes London Meetup 5 years ago. You can find him ranting on Twitter (@milosgajdos) and hacking on GitHub (milosgajdos83).</p> <p>Location:</p> <p>Microsoft Reactor London<br/>70 Wilson Street<br/><a href=\"https://goo.gl/maps/JjGrPNB8a9N2\" class=\"linkified\">https://goo.gl/maps/JjGrPNB8a9N2</a></p> <p>The nearest tube station is Moorgate, Old Street, Liverpool St. With the schedule:</p> <p>• 6.30pm: sandwiches and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.52177429199219,"address1":"70 Wilson Street","address2":null,"name":"The Microsoft Reactor London","postalCode":null,"lon":-0.08459799736738205,"country":"gb","city":"London"},"utcOffset":3600000,"time":1557855000000,"title":"Milos Gajdos - \"Information-centric networking: seeing the forest for the trees\""},"218580993":{"url":"https://www.meetup.com/Papers-We-Love-London/events/218580993/","description":"<p>Ricardo Monti from Imperial College London will presenting Distributed Optimization and Statistical Learning via the Alternating Direction Method of Multipliers by Stephen Boyd, Neal Parikh, Eric Chu, Borja Peleato and Jonathan Eckstein.</p> <p>Doors open at 6:30 pm; the presentation will begin at 7:00 pm.</p> <p>We hope that you'll take a look at <a href=\"http://stanford.edu/~boyd/papers/pdf/admm_distr_stats.pdf\">the paper</a> before the Meetup (and if you don't, no worries).</p> <p>Many modern statistics and machine learning problems can be recast as optimization problems where we look to minimize a convex objective function.</p> <p>The resulting objective function enforces a set of desirable properties which we wish our answer to possess: a popular example would be sparsity (i.e., we wish to obtain a sparse answer for reasons of interpretability or for other reasons).</p> <p>However, it is often the case that minimizing such objective functions is difficult. While there have been many solutions proposed in the literature, each of these tends to focus on a specific problem.</p> <p>The proposed paper describes a powerful optimization algorithm called the Alternating Directions Method of Multipliers (ADMM) - a conceptually simple method with which to solve a wide range of convex optimization problems  in an \"off-the-shelf\" manner.</p> <p>The ADMM algorithm works by exploiting the separable structure of many objective functions. By splitting the objective into a likelihood term and a penalization term, it is able to iteratively minimize the objective function with respect to each. As it turns out, each of these optimization steps is usually much simpler than the original problem (and in many cases has a closed form solution!). As a result, complex, high-dimensional problems can be broken down into a series of simple, 1-dimensional problems.</p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":0,"time":1421865000000,"title":"#3 Ricardo Monti - Distributed Optimization and Statistical Learning"},"230572344":{"url":"https://www.meetup.com/Papers-We-Love-London/events/230572344/","description":"<p>As ever, please <a href=\"https://skillsmatter.com/meetups/8110-end-to-end-arguments-in-system-design-by-saltzer-reed-and-clark\">sign up</a> at Skills Matter too.</p> <p>In \"End-to-End Arguments In System Design\", Saltzer, Reed, and Clark argue that building a robust and scalable system comes from pushing work to the edges of a system. or if you like: why bittorrent worked and multicast continues to fail.</p> <p><a href=\"https://t.co/2WZcNCsLWK\"><a href=\"http://web.mit.edu/Saltzer/www/publications/endtoend/endtoend.pdf\" class=\"linkified\">http://web.mit.edu/Saltzer/www/publications/endtoend/endtoend.pdf</a> …</a></p> <p>tef will also be arguing the same thing, but saying things out loud rather than writing things down.</p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":3600000,"time":1463506200000,"title":"tef on \"End-to-End Arguments In System Design\" by Saltzer, Reed, and Clark"},"225736762":{"url":"https://www.meetup.com/Papers-We-Love-London/events/225736762/","description":"<p><b>The speaker:</b></p> <p>Emily was until recently a Backend Engineer in SoundCloud's Data Team. Before that she was a Haskell developer for a Swedish e-signing startup, and before that she was a developer for a variety of financial institutions. She lives in London, and likes gardening and hanging out with her cat Albertina.</p> <p><b>The Paper:</b></p> <p>Leslie Lamport. 1998. The Part Time Parliament</p> <p><a href=\"http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf\"><a href=\"http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf\" class=\"linkified\">http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf</a></a></p> <p>The Paxos algorithm is a consensus algorithm that’s considered one of the most important in distributed computing. Cassandra uses it for <a href=\"http://www.datastax.com/dev/blog/lightweight-transactions-in-cassandra-2-0\">transactions</a>, <a href=\"https://cwiki.apache.org/confluence/display/ZOOKEEPER/Zab+vs.+Paxos\">zookeeper</a>'s Zab is based on it. This was the original paper that introduced it.</p> <p>The Part Time Parliament paper is utterly charming and very funny (when you’re in on the joke). It’s written in the style of an archeologist uncovering the workings of the parliament of the ancient civilisation of the island of Paxos. The implications for computer science are left until the end of the paper.</p> <p>The paper had a bumpy road to recognition, originally written in 1989, it was initially quite misunderstood - we’re going to look a bit more at its history.</p> <p>We will be discussing the nature of the parliament of ancient Paxos, and how this relates to distributed systems. We’ll then look at second section of the paper that discusses how the ancient Paxos synod worked. The synod algorithm sits at the heart of the Paxos algorithm, so understanding this is a key piece of understanding the whole thing.</p> <p>We won’t be looking at the rest of the paper, and Paxos algorithm, because it’s very long and complicated, and honestly I don’t understand it (yet) - Paxos is notoriously hard to understand and implement. But hopefully everyone will enjoy finding out about this creative and fun paper, and will come out with a solid understanding at least part of the algorithm.</p> <p>As it is at Skills Matter, please sign up with them also <a href=\"https://skillsmatter.com/meetups/7399-emily-green-on-the-part-time-parliament-paxos\"><a href=\"https://skillsmatter.com/meetups/7399-emily-green-on-the-part-time-parliament-paxos\" class=\"linkified\">https://skillsmatter.com/meetups/7399-emily-green-on-the-part-time-parliament-paxos</a></a></p> ","photos":[],"venue":{"lat":51.518890380859375,"address1":"10 South Place","address2":null,"name":"Skills Matter at CodeNode","postalCode":null,"lon":-0.08656299859285355,"country":"gb","city":"London"},"utcOffset":3600000,"time":1445450400000,"title":"Emily Green on The Part-Time Parliament (Paxos)"},"268482515":{"url":"https://www.meetup.com/Papers-We-Love-London/events/268482515/","description":"<p>Andrew Parker (@aparker42) presents the paper:</p> <p>\"Reconciling perspectives: A grounded theory of how people manage the process of software development\" (2012)</p> <p>by Steve Adolph, Philippe Kruchten, Wendy Hall (Article Link: <a href=\"https://www.sciencedirect.com/science/article/pii/S0164121212000386\" class=\"linkified\">https://www.sciencedirect.com/science/article/pii/S0164121212000386</a><br/>Full thesis downloadable PDF (2013): <a href=\"https://open.library.ubc.ca/media/download/pdf/24/1.0073582/2&amp;usg=AOvVaw3nQsXT9DHF7SCS1kzA5sdb\" class=\"linkified\">https://open.library.ubc.ca/media/download/pdf/24/1.0073582/2&amp;usg=AOvVaw3nQsXT9DHF7SCS1kzA5sdb</a>)</p> <p>Abstract</p> <p>In the paper \"Reconciling perspectives: A grounded theory of how people manage the process of software development” the authors Steve Adolph, Philippe Kruchten, and Wendy Hall investigate what is happening during our day to day, individual interactions. They found a recurring pattern that explains how so many people, acting more or less independently, are still able to produce software as a group. We are all taking part in a process of “reconciling perspectives.” The theory is constructed from observation and analysis of real software teams as they go about their day, and can provide a basis for understanding what is happening in our own daily interactions.<br/>The paper is readable and well written, which provides a clear exposition of the model and the methods used. The methods used in the study (grounded theory and related methods) are not something that many software engineers encounter, and they open a door to a different world of research. As such, the paper provides a useful study of software engineering and the methods that can be employed to understand software engineering.</p> <p>The Speaker</p> <p>Andrew Parker is a software engineer who takes a particular interest in the human aspects of software engineering. He has worked in a number of different environments from e-commerce to open source configuration management. Andrew's interest in the human aspects of software engineering has led him to work as an engineering manager and study anthropology and social sciences. At somewhat random times, Andrew writes on his blog (<a href=\"https://softwarelifecycle.wordpress.com/\" class=\"linkified\">https://softwarelifecycle.wordpress.com/</a>) or posts on twitter (@aparker42).</p> <p>Location:</p> <p>Acuris<br/>Ground Floor<br/>10 Queen St Place<br/>London, EC4R 1BE<br/><a href=\"https://goo.gl/maps/PoUcxgJrdfouUbWa9\" class=\"linkified\">https://goo.gl/maps/PoUcxgJrdfouUbWa9</a></p> <p>The nearest tube station is Cannon Street. The schedule:</p> <p>• 6.30pm: pizza and drinks<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.51028823852539,"address1":"10 Queen Street Place","address2":null,"name":"10 Queen St Pl","postalCode":null,"lon":-0.0928030014038086,"country":"gb","city":"London"},"utcOffset":0,"time":1582828200000,"title":"A grounded theory of how people manage the process of software development"},"258538644":{"url":"https://www.meetup.com/Papers-We-Love-London/events/258538644/","description":"<p>Derek Jones (<a href=\"http://www.knosof.co.uk\" class=\"linkified\">http://www.knosof.co.uk</a>) presents the paper:</p> <p>\"A conversation around the analysis of the SiP effort estimation dataset\"</p> <p>-&gt; Download Paper+link to data: <a href=\"http://arxiv.org/abs/1901.01621\" class=\"linkified\">http://arxiv.org/abs/1901.01621</a></p> <p>Abstract</p> <p>An analysis of over ten years of commercial development using Agile<br/>(10,100 unique task estimates made by 22 developers, under 20 project<br/>codes). Factors found to influence task implementation effort estimation accuracy included the person making the estimate, the project involved, and the propensity to use round numbers.</p> <p>The Speaker</p> <p>Derek used to write compilers that translated what people wrote, and then moved on to analyzing code to try to work out what they intended to write. These days he is analyzing all the publicly available software engineering data: <a href=\"http://www.knosof.co.uk/ESEUR\" class=\"linkified\">http://www.knosof.co.uk/ESEUR</a>.</p> <p>Location: <a href=\"https://goo.gl/maps/m6qMVAEQo4P2\" class=\"linkified\">https://goo.gl/maps/m6qMVAEQo4P2</a></p> <p>Droit Fintech - Albert House<br/>[masked] Old Street<br/>EC1V 9DD</p> <p>The nearest tube station is Old Street. The schedule:</p> <p>• 6.30pm: pizza and drinks (Kindly sponsored by Droit Fintech <a href=\"https://droit.tech\" class=\"linkified\">https://droit.tech</a>)<br/>• 7:00pm: presentation starts<br/>• 8:00pm: presentation end</p> <p>Meetup are captured on video and uploaded on the PWL London Youtube channel <a href=\"https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA\" class=\"embedded\">https://www.youtube.com/channel/UCEYe-1uDIkjPtuH_qhoybnA</a></p> ","photos":[],"venue":{"lat":51.52586364746094,"address1":"256-260 Old Street","address2":null,"name":"Albert House","postalCode":null,"lon":-0.08519600331783295,"country":"gb","city":"London"},"utcOffset":0,"time":1549564200000,"title":"Derek Jones presents \"The analysis of the SiP effort dataset\""},"170910742":{"url":"https://www.meetup.com/Papers-We-Love-London/events/170910742/","description":"<p><b>Equal Rights for Functional Objects, or, The More Things Change, the More they Stay the Same</b></p> <p>There are many ways of defining equality, particularly in a language which has both object-oriented and functional aspects. There's reference equality, numerical equality, shallow list equality, deep list equality, string equality, and even \"fuzzy\" floating-point equality. Which is the right to choose in any given situation? Which should i use for my equals() method on my custom object?</p> <p>This paper answers all of these questions, by taking a seemingly complex problem and revealing an underlying simplicity. It does this by defining one equality operation that works in any situation.</p> <p>The paper makes use of lisp syntax, but the ideas are applicable to most modern languages.</p> <p>Can anyone sponsor pizza and drinks? Makes it much easier for me to host more things at uSwitch if someone else covers the food.</p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":3600000,"time":1400088600000,"title":"#1 Philip Potter - Equal Rights for Functional Objects"},"239664173":{"url":"https://www.meetup.com/Papers-We-Love-London/events/239664173/","description":"<p>What happened in the basements of the AI lab at MIT in the late '50 is truly inspiring and this paper is telling us that story. Herbert Stoyan spent many years researching those early days and even McCarthy is pointing at his work in his papers!</p> <p>Lisp is one of the oldest languages out there. When I started learning about functional programming, I got interested in why Lisp languages are what they are today, what's the relationship with AI, what lambda calculus has to do with this, or why I kept hearing things like \"Lisp has failed\".</p> <p>Surprisingly, many concepts that we give for granted in functional programming today were there almost 60 years ago! </p> <p>The paper is quite accessible and a good start for the new season of PWL. Some Lisp sources will be presented but there is no need to have a deep knowledge of the language. An html version of the paper is available at </p> <p>&lt;a&gt;<a href=\"https://web.archive.org/web/20050405213907/http://www8.informatik.uni-erlangen.de/html/lisp/histlit1.html&lt;/a&gt\" class=\"linkified\">https://web.archive.org/web/20050405213907/http://www8.informatik.uni-erlangen.de/html/lisp/histlit1.html&lt;/a&gt</a>; </p> <p>uSwitch is providing pizza and beverages. Please remember to RSVP.</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/d/3/2/600_460983378.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/9/4/f/0/600_461078128.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/9/b/d/2/600_461079890.jpeg","height":null,"width":null}],"venue":{"lat":51.50352096557617,"address1":"The Cooperage, 5 Copper Row, London, SE1 2LH ","address2":null,"name":"uSwitch","postalCode":null,"lon":-0.07531899958848953,"country":"gb","city":"London"},"utcOffset":3600000,"time":1495128600000,"title":"Renzo Borgatti on \"Early Lisp History (1956 - 1959)\" by Herbert Stoyan"},"220691457":{"url":"https://www.meetup.com/Papers-We-Love-London/events/220691457/","description":"<p>In ‘the real world’, nothing is simple and failure is unavoidable. “How Complex Systems Fail” was discovered by Adam when he followed a reference in a database book. It expanded his mind on the similarities between hospitals, nuclear weapons, and databases, and now he’d like to share these with you.</p> <p>The paper is available at <a href=\"http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf\">&lt;/a&gt;&lt;a href=\"http://web.mit.edu/2.75/resources/random/How%20Complex%20Systems%20Fail.pdf\"&gt;<a href=\"http://web.mit.edu/2.75/resources/random/How%20Complex%20Systems%20Fail.pdf\" class=\"linkified\">http://web.mit.edu/2.75/resources/random/How%20Complex%20Systems%20Fail.pdf</a></a> . Its subtitle, \"Being a Short Treatise on the Nature of Failure;<br/>How Failure is Evaluated; How Failure is Attributed to Proximate<br/>Cause; and the Resulting New Understanding of Patient Safety\", serves as a brief abstract.</p> <p>About Adam:</p> <p>Having started programming at the age of 8, Adam has nearly got the hang of running a website. Please don't invent anything that makes this harder for him.</p> ","photos":[],"venue":{"lat":51.50611877441406,"address1":"Notcutt House, 36 Southwark Bridge Road","address2":"SE1 9EU","name":"uSwitch","postalCode":null,"lon":-0.09585899859666824,"country":"gb","city":"London"},"utcOffset":0,"time":1426705200000,"title":"Adam Johnson on How Complex Systems Fail"}}